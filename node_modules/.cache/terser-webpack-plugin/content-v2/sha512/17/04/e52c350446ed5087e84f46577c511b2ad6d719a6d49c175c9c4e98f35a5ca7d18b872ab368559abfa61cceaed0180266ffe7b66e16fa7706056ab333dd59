{"map":"{\"version\":3,\"sources\":[\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/serviceWorker.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/context/auth.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/util/AuthRoute.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/components/MenuBar.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/util/MyPopup.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/components/LikeButton.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/util/graphql.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/components/DeleteButton.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/components/PostCard.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/util/hooks.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/components/PostForm.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/pages/Home.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/pages/Login.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/pages/Register.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/pages/SinglePost.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/App.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/ApolloProvider.js\",\"/Users/empzxb/Documents/deepLearning/classsed-graphql-mern-apollo/client/src/index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"initialState\",\"user\",\"localStorage\",\"getItem\",\"decodedToken\",\"jwtDecode\",\"exp\",\"Date\",\"now\",\"removeItem\",\"AuthContext\",\"createContext\",\"login\",\"userData\",\"logout\",\"authReducer\",\"state\",\"action\",\"type\",\"Object\",\"objectSpread\",\"payload\",\"AuthProvider\",\"props\",\"_useReducer\",\"useReducer\",\"_useReducer2\",\"slicedToArray\",\"dispatch\",\"react_default\",\"a\",\"createElement\",\"Provider\",\"assign\",\"value\",\"setItem\",\"token\",\"AuthRoute\",\"_ref\",\"Component\",\"component\",\"rest\",\"objectWithoutProperties\",\"useContext\",\"react_router\",\"render\",\"to\",\"MenuBar\",\"_useContext\",\"pathname\",\"path\",\"substr\",\"_useState\",\"useState\",\"_useState2\",\"activeItem\",\"setActiveItem\",\"handleItemClick\",\"e\",\"name\",\"Menu\",\"pointing\",\"secondary\",\"size\",\"color\",\"Item\",\"username\",\"active\",\"as\",\"Link\",\"position\",\"onClick\",\"MyPopup\",\"content\",\"children\",\"Popup\",\"inverted\",\"trigger\",\"LIKE_POST_MUTATION\",\"gql\",\"_templateObject\",\"LikeButton\",\"_ref$post\",\"post\",\"id\",\"likeCount\",\"likes\",\"liked\",\"setLiked\",\"useEffect\",\"find\",\"like\",\"_useMutation\",\"useMutation\",\"variables\",\"postId\",\"likePost\",\"likeButton\",\"Button\",\"Icon\",\"basic\",\"labelPosition\",\"util_MyPopup\",\"Label\",\"FETCH_POSTS_QUERY\",\"graphql_templateObject\",\"DELETE_POST_MUTATION\",\"DeleteButton_templateObject\",\"DELETE_COMMENT_MUTATION\",\"_templateObject2\",\"DeleteButton\",\"commentId\",\"callback\",\"confirmOpen\",\"setConfirmOpen\",\"mutation\",\"update\",\"proxy\",\"data\",\"readQuery\",\"query\",\"getPosts\",\"filter\",\"p\",\"writeQuery\",\"deletePostOrMutation\",\"Fragment\",\"floated\",\"style\",\"margin\",\"Confirm\",\"open\",\"onCancel\",\"onConfirm\",\"PostCard\",\"body\",\"createdAt\",\"commentCount\",\"Card\",\"fluid\",\"Content\",\"Image\",\"src\",\"Header\",\"Meta\",\"concat\",\"moment\",\"fromNow\",\"Description\",\"scrolling\",\"border\",\"frameborder\",\"framespacing\",\"allowfullscreen\",\"extra\",\"components_LikeButton\",\"components_DeleteButton\",\"useForm\",\"arguments\",\"length\",\"undefined\",\"values\",\"setValues\",\"onChange\",\"event\",\"defineProperty\",\"target\",\"onSubmit\",\"preventDefault\",\"CREATE_POST_MUTATION\",\"PostForm_templateObject\",\"PostForm\",\"_useForm\",\"createPost\",\"result\",\"toConsumableArray\",\"_useMutation2\",\"error\",\"Form\",\"Field\",\"Input\",\"placeholder\",\"className\",\"marginBottom\",\"graphQLErrors\",\"message\",\"Home\",\"_useQuery\",\"useQuery\",\"loading\",\"posts\",\"Grid\",\"columns\",\"Row\",\"Column\",\"components_PostForm\",\"Transition\",\"Group\",\"map\",\"key\",\"components_PostCard\",\"LOGIN_USER\",\"Login_templateObject\",\"Login\",\"context\",\"errors\",\"setErrors\",\"loginUser\",\"password\",\"_\",\"history\",\"push\",\"onError\",\"err\",\"extensions\",\"exception\",\"noValidate\",\"label\",\"primary\",\"keys\",\"REGISTER_USER\",\"Register_templateObject\",\"Register\",\"addUser\",\"email\",\"confirmPassword\",\"register\",\"SUBMIT_COMMENT_MUTATION\",\"SinglePost_templateObject\",\"FETCH_POST_QUERY\",\"SinglePost_templateObject2\",\"SinglePost\",\"postMarkup\",\"params\",\"commentInputRef\",\"useRef\",\"comment\",\"setComment\",\"getPost\",\"current\",\"blur\",\"submitComment\",\"comments\",\"width\",\"float\",\"console\",\"log\",\"ref\",\"disabled\",\"trim\",\"App\",\"react_router_dom\",\"Container\",\"components_MenuBar\",\"exact\",\"util_AuthRoute\",\"httpLink\",\"createHttpLink\",\"uri\",\"authLink\",\"setContext\",\"headers\",\"Authorization\",\"client\",\"ApolloClient\",\"link\",\"cache\",\"InMemoryCache\",\"ApolloProvider\",\"react_common_esm\",\"src_App\",\"ReactDOM\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React, { useReducer, createContext } from 'react';\\nimport jwtDecode from 'jwt-decode';\\n\\nconst initialState = {\\n  user: null\\n};\\n\\nif (localStorage.getItem('jwtToken')) {\\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\\n\\n  if (decodedToken.exp * 1000 < Date.now()) {\\n    localStorage.removeItem('jwtToken');\\n  } else {\\n    initialState.user = decodedToken;\\n  }\\n}\\n\\nconst AuthContext = createContext({\\n  user: null,\\n  login: (userData) => {},\\n  logout: () => {}\\n});\\n\\nfunction authReducer(state, action) {\\n  switch (action.type) {\\n    case 'LOGIN':\\n      return {\\n        ...state,\\n        user: action.payload\\n      };\\n    case 'LOGOUT':\\n      return {\\n        ...state,\\n        user: null\\n      };\\n    default:\\n      return state;\\n  }\\n}\\n\\nfunction AuthProvider(props) {\\n  const [state, dispatch] = useReducer(authReducer, initialState);\\n\\n  function login(userData) {\\n    localStorage.setItem('jwtToken', userData.token);\\n    dispatch({\\n      type: 'LOGIN',\\n      payload: userData\\n    });\\n  }\\n\\n  function logout() {\\n    localStorage.removeItem('jwtToken');\\n    dispatch({ type: 'LOGOUT' });\\n  }\\n\\n  return (\\n    <AuthContext.Provider\\n      value={{ user: state.user, login, logout }}\\n      {...props}\\n    />\\n  );\\n}\\n\\nexport { AuthContext, AuthProvider };\\n\",\"import React, { useContext } from 'react';\\nimport { Route, Redirect } from 'react-router-dom';\\n\\nimport { AuthContext } from '../context/auth';\\n\\nfunction AuthRoute({ component: Component, ...rest }) {\\n  const { user } = useContext(AuthContext);\\n\\n  return (\\n    <Route\\n      {...rest}\\n      render={(props) =>\\n        user ? <Redirect to=\\\"/\\\" /> : <Component {...props} />\\n      }\\n    />\\n  );\\n}\\n\\nexport default AuthRoute;\\n\",\"import React, { useContext, useState } from 'react';\\nimport { Menu } from 'semantic-ui-react';\\nimport { Link } from 'react-router-dom';\\n\\nimport { AuthContext } from '../context/auth';\\n\\nfunction MenuBar() {\\n  const { user, logout } = useContext(AuthContext);\\n  const pathname = window.location.pathname;\\n\\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\\n  const [activeItem, setActiveItem] = useState(path);\\n\\n  const handleItemClick = (e, { name }) => setActiveItem(name);\\n\\n  const menuBar = user ? (\\n    <Menu pointing secondary size=\\\"massive\\\" color=\\\"teal\\\">\\n      <Menu.Item name={user.username} active as={Link} to=\\\"/\\\" />\\n\\n      <Menu.Menu position=\\\"right\\\">\\n        <Menu.Item name=\\\"logout\\\" onClick={logout} />\\n      </Menu.Menu>\\n    </Menu>\\n  ) : (\\n    <Menu pointing secondary size=\\\"massive\\\" color=\\\"teal\\\">\\n      <Menu.Item\\n        name=\\\"home\\\"\\n        active={activeItem === 'home'}\\n        onClick={handleItemClick}\\n        as={Link}\\n        to=\\\"/\\\"\\n      />\\n\\n      <Menu.Menu position=\\\"right\\\">\\n        <Menu.Item\\n          name=\\\"login\\\"\\n          active={activeItem === 'login'}\\n          onClick={handleItemClick}\\n          as={Link}\\n          to=\\\"/login\\\"\\n        />\\n        <Menu.Item\\n          name=\\\"register\\\"\\n          active={activeItem === 'register'}\\n          onClick={handleItemClick}\\n          as={Link}\\n          to=\\\"/register\\\"\\n        />\\n      </Menu.Menu>\\n    </Menu>\\n  );\\n\\n  return menuBar;\\n}\\n\\nexport default MenuBar;\\n\",\"import { Popup } from 'semantic-ui-react';\\nimport React from 'react';\\n\\nfunction MyPopup({ content, children }) {\\n  return <Popup inverted content={content} trigger={children} />;\\n}\\n\\nexport default MyPopup;\\n\",\"import React, { useEffect, useState } from 'react';\\nimport { Link } from 'react-router-dom';\\nimport { useMutation } from '@apollo/react-hooks';\\nimport gql from 'graphql-tag';\\nimport { Button, Label, Icon } from 'semantic-ui-react';\\n\\nimport MyPopup from '../util/MyPopup';\\n\\nfunction LikeButton({ user, post: { id, likeCount, likes } }) {\\n  const [liked, setLiked] = useState(false);\\n\\n  useEffect(() => {\\n    if (user && likes.find((like) => like.username === user.username)) {\\n      setLiked(true);\\n    } else setLiked(false);\\n  }, [user, likes]);\\n\\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\\n    variables: { postId: id }\\n  });\\n\\n  const likeButton = user ? (\\n    liked ? (\\n      <Button color=\\\"teal\\\">\\n        <Icon name=\\\"heart\\\" />\\n      </Button>\\n    ) : (\\n      <Button color=\\\"teal\\\" basic>\\n        <Icon name=\\\"heart\\\" />\\n      </Button>\\n    )\\n  ) : (\\n    <Button as={Link} to=\\\"/login\\\" color=\\\"teal\\\" basic>\\n      <Icon name=\\\"heart\\\" />\\n    </Button>\\n  );\\n\\n  return (\\n    <Button as=\\\"div\\\" labelPosition=\\\"right\\\" onClick={likePost}>\\n      <MyPopup content={liked ? 'Unlike' : 'Like'}>{likeButton}</MyPopup>\\n      <Label basic color=\\\"teal\\\" pointing=\\\"left\\\">\\n        {likeCount}\\n      </Label>\\n    </Button>\\n  );\\n}\\n\\nconst LIKE_POST_MUTATION = gql`\\n  mutation likePost($postId: ID!) {\\n    likePost(postId: $postId) {\\n      id\\n      likes {\\n        id\\n        username\\n      }\\n      likeCount\\n    }\\n  }\\n`;\\n\\nexport default LikeButton;\\n\",\"import gql from 'graphql-tag';\\n\\nexport const FETCH_POSTS_QUERY = gql`\\n  {\\n    getPosts {\\n      id\\n      body\\n      createdAt\\n      username\\n      likeCount\\n      likes {\\n        username\\n      }\\n      commentCount\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n    }\\n  }\\n`;\\n\",\"import React, { useState } from 'react';\\nimport gql from 'graphql-tag';\\nimport { useMutation } from '@apollo/react-hooks';\\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\\n\\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\\nimport MyPopup from '../util/MyPopup';\\n\\nfunction DeleteButton({ postId, commentId, callback }) {\\n  const [confirmOpen, setConfirmOpen] = useState(false);\\n\\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\\n\\n  const [deletePostOrMutation] = useMutation(mutation, {\\n    update(proxy) {\\n      setConfirmOpen(false);\\n      if (!commentId) {\\n        const data = proxy.readQuery({\\n          query: FETCH_POSTS_QUERY\\n        });\\n        data.getPosts = data.getPosts.filter((p) => p.id !== postId);\\n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\\n      }\\n      if (callback) callback();\\n    },\\n    variables: {\\n      postId,\\n      commentId\\n    }\\n  });\\n  return (\\n    <>\\n      <MyPopup content={commentId ? 'Delete comment' : 'Delete post'}>\\n        <Button\\n          as=\\\"div\\\"\\n          color=\\\"red\\\"\\n          floated=\\\"right\\\"\\n          onClick={() => setConfirmOpen(true)}\\n        >\\n          <Icon name=\\\"trash\\\" style={{ margin: 0 }} />\\n        </Button>\\n      </MyPopup>\\n      <Confirm\\n        open={confirmOpen}\\n        onCancel={() => setConfirmOpen(false)}\\n        onConfirm={deletePostOrMutation}\\n      />\\n    </>\\n  );\\n}\\n\\nconst DELETE_POST_MUTATION = gql`\\n  mutation deletePost($postId: ID!) {\\n    deletePost(postId: $postId)\\n  }\\n`;\\n\\nconst DELETE_COMMENT_MUTATION = gql`\\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\\n    deleteComment(postId: $postId, commentId: $commentId) {\\n      id\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n      commentCount\\n    }\\n  }\\n`;\\n\\nexport default DeleteButton;\\n\",\"import React, { useContext } from 'react';\\nimport { Button, Card, Icon, Label, Image, Embed } from 'semantic-ui-react';\\nimport { Link } from 'react-router-dom';\\nimport moment from 'moment';\\n\\nimport { AuthContext } from '../context/auth';\\nimport LikeButton from './LikeButton';\\nimport DeleteButton from './DeleteButton';\\nimport MyPopup from '../util/MyPopup';\\n\\nfunction PostCard({\\n  post: { body, createdAt, id, username, likeCount, commentCount, likes }\\n}) {\\n  const { user } = useContext(AuthContext);\\n\\n  return (\\n    <Card fluid>\\n      <Card.Content>\\n        <Image\\n          floated=\\\"right\\\"\\n          size=\\\"mini\\\"\\n          src=\\\"https://react.semantic-ui.com/images/avatar/large/molly.png\\\"\\n        />\\n        <Card.Header>{username}</Card.Header>\\n        <Card.Meta as={Link} to={`/posts/${id}`}>\\n          {moment(createdAt).fromNow(true)}\\n        </Card.Meta>\\n        <Card.Description>{body}</Card.Description>\\n      </Card.Content>\\n      <Card.Content>\\n          <iframe src=\\\"//player.bilibili.com/player.html?aid=8438275&bvid=BV1hx41117tE&cid=13892333&page=1\\\" scrolling=\\\"no\\\" border=\\\"0\\\" frameborder=\\\"no\\\" framespacing=\\\"0\\\" allowfullscreen=\\\"true\\\"> </iframe>\\n      </Card.Content>\\n      <Card.Content extra>\\n        <LikeButton user={user} post={{ id, likes, likeCount }} />\\n        <MyPopup content=\\\"Comment on post\\\">\\n          <Button labelPosition=\\\"right\\\" as={Link} to={`/posts/${id}`}>\\n            <Button color=\\\"blue\\\" basic>\\n              <Icon name=\\\"comments\\\" />\\n            </Button>\\n            <Label basic color=\\\"blue\\\" pointing=\\\"left\\\">\\n              {commentCount}\\n            </Label>\\n          </Button>\\n        </MyPopup>\\n        {user && user.username === username && <DeleteButton postId={id} />}\\n      </Card.Content>\\n    </Card>\\n  );\\n}\\n\\nexport default PostCard;\\n\",\"import { useState } from 'react';\\n\\nexport const useForm = (callback, initialState = {}) => {\\n  const [values, setValues] = useState(initialState);\\n\\n  const onChange = (event) => {\\n    setValues({ ...values, [event.target.name]: event.target.value });\\n  };\\n\\n  const onSubmit = (event) => {\\n    event.preventDefault();\\n    callback();\\n  };\\n\\n  return {\\n    onChange,\\n    onSubmit,\\n    values\\n  };\\n};\\n\",\"import React from 'react';\\nimport { Button, Form } from 'semantic-ui-react';\\nimport gql from 'graphql-tag';\\nimport { useMutation } from '@apollo/react-hooks';\\n\\nimport { useForm } from '../util/hooks';\\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\\n\\nfunction PostForm() {\\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\\n    body: ''\\n  });\\n\\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\\n    variables: values,\\n    update(proxy, result) {\\n      const data = proxy.readQuery({\\n        query: FETCH_POSTS_QUERY\\n      });\\n      data.getPosts = [result.data.createPost, ...data.getPosts];\\n      proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\\n      values.body = '';\\n    }\\n  });\\n\\n  function createPostCallback() {\\n    createPost();\\n  }\\n\\n  return (\\n    <>\\n      <Form onSubmit={onSubmit}>\\n        <h2>Create a post:</h2>\\n        <Form.Field>\\n          <Form.Input\\n            placeholder=\\\"Hi World!\\\"\\n            name=\\\"body\\\"\\n            onChange={onChange}\\n            value={values.body}\\n            error={error ? true : false}\\n          />\\n          <Button type=\\\"submit\\\" color=\\\"teal\\\">\\n            Submit\\n          </Button>\\n        </Form.Field>\\n      </Form>\\n      {error && (\\n        <div className=\\\"ui error message\\\" style={{ marginBottom: 20 }}>\\n          <ul className=\\\"list\\\">\\n            <li>{error.graphQLErrors[0].message}</li>\\n          </ul>\\n        </div>\\n      )}\\n    </>\\n  );\\n}\\n\\nconst CREATE_POST_MUTATION = gql`\\n  mutation createPost($body: String!) {\\n    createPost(body: $body) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likes {\\n        id\\n        username\\n        createdAt\\n      }\\n      likeCount\\n      comments {\\n        id\\n        body\\n        username\\n        createdAt\\n      }\\n      commentCount\\n    }\\n  }\\n`;\\n\\nexport default PostForm;\\n\",\"import React, { useContext } from 'react';\\nimport { useQuery } from '@apollo/react-hooks';\\nimport { Grid, Transition } from 'semantic-ui-react';\\n\\nimport { AuthContext } from '../context/auth';\\nimport PostCard from '../components/PostCard';\\nimport PostForm from '../components/PostForm';\\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\\n\\nfunction Home() {\\n  const { user } = useContext(AuthContext);\\n  const {\\n    loading,\\n    data: { getPosts: posts } \\n  } = useQuery(FETCH_POSTS_QUERY);\\n\\n  return (\\n    <Grid columns={1}>\\n      <Grid.Row className=\\\"page-title\\\">\\n        <h1>Recent Posts</h1>\\n      </Grid.Row>\\n      <Grid.Row>\\n        {user && (\\n          <Grid.Column>\\n            <PostForm />\\n          </Grid.Column>\\n        )}\\n        {loading ? (\\n          <h1>Loading posts..</h1>\\n        ) : (\\n          <Transition.Group>\\n            {posts &&\\n              posts.map((post) => (\\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\\n                  <PostCard post={post} />\\n                </Grid.Column>\\n              ))}\\n          </Transition.Group>\\n        )}\\n      </Grid.Row>\\n    </Grid>\\n  );\\n}\\n\\nexport default Home;\\n\",\"import React, { useContext, useState } from 'react';\\nimport { Button, Form } from 'semantic-ui-react';\\nimport { useMutation } from '@apollo/react-hooks';\\nimport gql from 'graphql-tag';\\n\\nimport { AuthContext } from '../context/auth';\\nimport { useForm } from '../util/hooks';\\n\\nfunction Login(props) {\\n  const context = useContext(AuthContext);\\n  const [errors, setErrors] = useState({});\\n\\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\\n    username: '',\\n    password: ''\\n  });\\n\\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\\n    update(\\n      _,\\n      {\\n        data: { login: userData }\\n      }\\n    ) {\\n      context.login(userData);\\n      props.history.push('/');\\n    },\\n    onError(err) {\\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\\n    },\\n    variables: values\\n  });\\n\\n  function loginUserCallback() {\\n    loginUser();\\n  }\\n\\n  return (\\n    <div className=\\\"form-container\\\">\\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\\n        <h1>Login</h1>\\n        <Form.Input\\n          label=\\\"Username\\\"\\n          placeholder=\\\"Username..\\\"\\n          name=\\\"username\\\"\\n          type=\\\"text\\\"\\n          value={values.username}\\n          error={errors.username ? true : false}\\n          onChange={onChange}\\n        />\\n        <Form.Input\\n          label=\\\"Password\\\"\\n          placeholder=\\\"Password..\\\"\\n          name=\\\"password\\\"\\n          type=\\\"password\\\"\\n          value={values.password}\\n          error={errors.password ? true : false}\\n          onChange={onChange}\\n        />\\n        <Button type=\\\"submit\\\" primary>\\n          Login\\n        </Button>\\n      </Form>\\n      {Object.keys(errors).length > 0 && (\\n        <div className=\\\"ui error message\\\">\\n          <ul className=\\\"list\\\">\\n            {Object.values(errors).map((value) => (\\n              <li key={value}>{value}</li>\\n            ))}\\n          </ul>\\n        </div>\\n      )}\\n    </div>\\n  );\\n}\\n\\nconst LOGIN_USER = gql`\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n`;\\n\\nexport default Login;\\n\",\"import React, { useContext, useState } from 'react';\\nimport { Button, Form } from 'semantic-ui-react';\\nimport { useMutation } from '@apollo/react-hooks';\\nimport gql from 'graphql-tag';\\n\\nimport { AuthContext } from '../context/auth';\\nimport { useForm } from '../util/hooks';\\n\\nfunction Register(props) {\\n  const context = useContext(AuthContext);\\n  const [errors, setErrors] = useState({});\\n\\n  const { onChange, onSubmit, values } = useForm(registerUser, {\\n    username: '',\\n    email: '',\\n    password: '',\\n    confirmPassword: ''\\n  });\\n\\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\\n    update(\\n      _,\\n      {\\n        data: { register: userData }\\n      }\\n    ) {\\n      context.login(userData);\\n      props.history.push('/');\\n    },\\n    onError(err) {\\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\\n    },\\n    variables: values\\n  });\\n\\n  function registerUser() {\\n    addUser();\\n  }\\n\\n  return (\\n    <div className=\\\"form-container\\\">\\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\\n        <h1>Register</h1>\\n        <Form.Input\\n          label=\\\"Username\\\"\\n          placeholder=\\\"Username..\\\"\\n          name=\\\"username\\\"\\n          type=\\\"text\\\"\\n          value={values.username}\\n          error={errors.username ? true : false}\\n          onChange={onChange}\\n        />\\n        <Form.Input\\n          label=\\\"Email\\\"\\n          placeholder=\\\"Email..\\\"\\n          name=\\\"email\\\"\\n          type=\\\"email\\\"\\n          value={values.email}\\n          error={errors.email ? true : false}\\n          onChange={onChange}\\n        />\\n        <Form.Input\\n          label=\\\"Password\\\"\\n          placeholder=\\\"Password..\\\"\\n          name=\\\"password\\\"\\n          type=\\\"password\\\"\\n          value={values.password}\\n          error={errors.password ? true : false}\\n          onChange={onChange}\\n        />\\n        <Form.Input\\n          label=\\\"Confirm Password\\\"\\n          placeholder=\\\"Confirm Password..\\\"\\n          name=\\\"confirmPassword\\\"\\n          type=\\\"password\\\"\\n          value={values.confirmPassword}\\n          error={errors.confirmPassword ? true : false}\\n          onChange={onChange}\\n        />\\n        <Button type=\\\"submit\\\" primary>\\n          Register\\n        </Button>\\n      </Form>\\n      {Object.keys(errors).length > 0 && (\\n        <div className=\\\"ui error message\\\">\\n          <ul className=\\\"list\\\">\\n            {Object.values(errors).map((value) => (\\n              <li key={value}>{value}</li>\\n            ))}\\n          </ul>\\n        </div>\\n      )}\\n    </div>\\n  );\\n}\\n\\nconst REGISTER_USER = gql`\\n  mutation register(\\n    $username: String!\\n    $email: String!\\n    $password: String!\\n    $confirmPassword: String!\\n  ) {\\n    register(\\n      registerInput: {\\n        username: $username\\n        email: $email\\n        password: $password\\n        confirmPassword: $confirmPassword\\n      }\\n    ) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n`;\\n\\nexport default Register;\\n\",\"import React, { useContext, useState, useRef } from 'react';\\nimport gql from 'graphql-tag';\\nimport { useQuery, useMutation } from '@apollo/react-hooks';\\nimport moment from 'moment';\\nimport {\\n  Button,\\n  Card,\\n  Form,\\n  Grid,\\n  Image,\\n  Icon,\\n  Label\\n} from 'semantic-ui-react';\\n\\nimport { AuthContext } from '../context/auth';\\nimport LikeButton from '../components/LikeButton';\\nimport DeleteButton from '../components/DeleteButton';\\nimport MyPopup from '../util/MyPopup';\\n\\nfunction SinglePost(props) {\\n  const postId = props.match.params.postId;\\n  const { user } = useContext(AuthContext);\\n  const commentInputRef = useRef(null);\\n\\n  const [comment, setComment] = useState('');\\n\\n  const {\\n    data: { getPost }\\n  } = useQuery(FETCH_POST_QUERY, {\\n    variables: {\\n      postId\\n    }\\n  });\\n\\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\\n    update() {\\n      setComment('');\\n      commentInputRef.current.blur();\\n    },\\n    variables: {\\n      postId,\\n      body: comment\\n    }\\n  });\\n\\n  function deletePostCallback() {\\n    props.history.push('/');\\n  }\\n\\n  let postMarkup;\\n  if (!getPost) {\\n    postMarkup = <p>Loading post..</p>;\\n  } else {\\n    const {\\n      id,\\n      body,\\n      createdAt,\\n      username,\\n      comments,\\n      likes,\\n      likeCount,\\n      commentCount\\n    } = getPost;\\n\\n    postMarkup = (\\n      <Grid>\\n        <Grid.Row>\\n          <Grid.Column width={2}>\\n            <Image\\n              src=\\\"https://react.semantic-ui.com/images/avatar/large/molly.png\\\"\\n              size=\\\"small\\\"\\n              float=\\\"right\\\"\\n            />\\n          </Grid.Column>\\n          <Grid.Column width={10}>\\n            <Card fluid>\\n              <Card.Content>\\n                <Card.Header>{username}</Card.Header>\\n                <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\\n                <Card.Description>{body}</Card.Description>\\n              </Card.Content>\\n              <hr />\\n              <Card.Content extra>\\n                <LikeButton user={user} post={{ id, likeCount, likes }} />\\n                <MyPopup content=\\\"Comment on post\\\">\\n                  <Button\\n                    as=\\\"div\\\"\\n                    labelPosition=\\\"right\\\"\\n                    onClick={() => console.log('Comment on post')}\\n                  >\\n                    <Button basic color=\\\"blue\\\">\\n                      <Icon name=\\\"comments\\\" />\\n                    </Button>\\n                    <Label basic color=\\\"blue\\\" pointing=\\\"left\\\">\\n                      {commentCount}\\n                    </Label>\\n                  </Button>\\n                </MyPopup>\\n                {user && user.username === username && (\\n                  <DeleteButton postId={id} callback={deletePostCallback} />\\n                )}\\n              </Card.Content>\\n            </Card>\\n            {user && (\\n              <Card fluid>\\n                <Card.Content>\\n                  <p>Post a comment</p>\\n                  <Form>\\n                    <div className=\\\"ui action input fluid\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"Comment..\\\"\\n                        name=\\\"comment\\\"\\n                        value={comment}\\n                        onChange={(event) => setComment(event.target.value)}\\n                        ref={commentInputRef}\\n                      />\\n                      <button\\n                        type=\\\"submit\\\"\\n                        className=\\\"ui button teal\\\"\\n                        disabled={comment.trim() === ''}\\n                        onClick={submitComment}\\n                      >\\n                        Submit\\n                      </button>\\n                    </div>\\n                  </Form>\\n                </Card.Content>\\n              </Card>\\n            )}\\n            {comments.map((comment) => (\\n              <Card fluid key={comment.id}>\\n                <Card.Content>\\n                  {user && user.username === comment.username && (\\n                    <DeleteButton postId={id} commentId={comment.id} />\\n                  )}\\n                  <Card.Header>{comment.username}</Card.Header>\\n                  <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\\n                  <Card.Description>{comment.body}</Card.Description>\\n                </Card.Content>\\n              </Card>\\n            ))}\\n          </Grid.Column>\\n        </Grid.Row>\\n      </Grid>\\n    );\\n  }\\n  return postMarkup;\\n}\\n\\nconst SUBMIT_COMMENT_MUTATION = gql`\\n  mutation($postId: String!, $body: String!) {\\n    createComment(postId: $postId, body: $body) {\\n      id\\n      comments {\\n        id\\n        body\\n        createdAt\\n        username\\n      }\\n      commentCount\\n    }\\n  }\\n`;\\n\\nconst FETCH_POST_QUERY = gql`\\n  query($postId: ID!) {\\n    getPost(postId: $postId) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likeCount\\n      likes {\\n        username\\n      }\\n      commentCount\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n    }\\n  }\\n`;\\n\\nexport default SinglePost;\\n\",\"import React from 'react';\\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\\nimport { Container } from 'semantic-ui-react';\\n\\nimport 'semantic-ui-css/semantic.min.css';\\nimport './App.css';\\n\\nimport { AuthProvider } from './context/auth';\\nimport AuthRoute from './util/AuthRoute';\\n\\nimport MenuBar from './components/MenuBar';\\nimport Home from './pages/Home';\\nimport Login from './pages/Login';\\nimport Register from './pages/Register';\\nimport SinglePost from './pages/SinglePost';\\n\\nfunction App() {\\n  return (\\n    <AuthProvider>\\n      <Router>\\n        <Container>\\n          <MenuBar />\\n          <Route exact path=\\\"/\\\" component={Home} />\\n          <AuthRoute exact path=\\\"/login\\\" component={Login} />\\n          <AuthRoute exact path=\\\"/register\\\" component={Register} />\\n          <Route exact path=\\\"/posts/:postId\\\" component={SinglePost} />\\n        </Container>\\n      </Router>\\n    </AuthProvider>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport App from './App';\\nimport ApolloClient from 'apollo-client';\\nimport { InMemoryCache } from 'apollo-cache-inmemory';\\nimport { createHttpLink } from 'apollo-link-http';\\nimport { ApolloProvider } from '@apollo/react-hooks';\\nimport { setContext } from 'apollo-link-context';\\n\\nconst httpLink = createHttpLink({\\n  uri: 'http://192.168.1.101:5000'\\n});\\n\\nconst authLink = setContext(() => {\\n  const token = localStorage.getItem('jwtToken');\\n  return {\\n    headers: {\\n      Authorization: token ? `Bearer ${token}` : ''\\n    }\\n  };\\n});\\n\\nconst client = new ApolloClient({\\n  link: authLink.concat(httpLink),\\n  cache: new InMemoryCache()\\n});\\n\\nexport default (\\n  <ApolloProvider client={client}>\\n    <App />\\n  </ApolloProvider>\\n);\\n\",\"import ReactDOM from 'react-dom';\\nimport * as serviceWorker from './serviceWorker';\\nimport ApolloProvider from './ApolloProvider';\\n\\nReactDOM.render(ApolloProvider, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{288:function(e,t,n){e.exports=n(464)},294:function(e,t,n){},464:function(e,t,n){\"use strict\";n.r(t);var a=n(75),r=n.n(a);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var o=n(0),l=n.n(o),c=n(36),m=n(65),s=n(476),i=(n(293),n(294),n(20)),u=n(102),d=n(245),p=n.n(d),b={user:null};if(localStorage.getItem(\"jwtToken\")){var E=p()(localStorage.getItem(\"jwtToken\"));1e3*E.exp<Date.now()?localStorage.removeItem(\"jwtToken\"):b.user=E}var g=Object(o.createContext)({user:null,login:function(e){},logout:function(){}});function f(e,t){switch(t.type){case\"LOGIN\":return Object(u.a)({},e,{user:t.payload});case\"LOGOUT\":return Object(u.a)({},e,{user:null});default:return e}}function v(e){var t=Object(o.useReducer)(f,b),n=Object(i.a)(t,2),a=n[0],r=n[1];return l.a.createElement(g.Provider,Object.assign({value:{user:a.user,login:function(e){localStorage.setItem(\"jwtToken\",e.token),r({type:\"LOGIN\",payload:e})},logout:function(){localStorage.removeItem(\"jwtToken\"),r({type:\"LOGOUT\"})}}},e))}var h=n(246);var j=function(e){var t=e.component,n=Object(h.a)(e,[\"component\"]),a=Object(o.useContext)(g).user;return l.a.createElement(m.b,Object.assign({},n,{render:function(e){return a?l.a.createElement(m.a,{to:\"/\"}):l.a.createElement(t,e)}}))},y=n(483);var O=function(){var e=Object(o.useContext)(g),t=e.user,n=e.logout,a=window.location.pathname,r=\"/\"===a?\"home\":a.substr(1),m=Object(o.useState)(r),s=Object(i.a)(m,2),u=s[0],d=s[1],p=function(e,t){var n=t.name;return d(n)};return t?l.a.createElement(y.a,{pointing:!0,secondary:!0,size:\"massive\",color:\"teal\"},l.a.createElement(y.a.Item,{name:t.username,active:!0,as:c.b,to:\"/\"}),l.a.createElement(y.a.Menu,{position:\"right\"},l.a.createElement(y.a.Item,{name:\"logout\",onClick:n}))):l.a.createElement(y.a,{pointing:!0,secondary:!0,size:\"massive\",color:\"teal\"},l.a.createElement(y.a.Item,{name:\"home\",active:\"home\"===u,onClick:p,as:c.b,to:\"/\"}),l.a.createElement(y.a.Menu,{position:\"right\"},l.a.createElement(y.a.Item,{name:\"login\",active:\"login\"===u,onClick:p,as:c.b,to:\"/login\"}),l.a.createElement(y.a.Item,{name:\"register\",active:\"register\"===u,onClick:p,as:c.b,to:\"/register\"})))},C=n(30),w=n(484),I=n(486),k=n(481),P=n(275),S=n(482),$=n(89),x=n(138),N=n(103),A=n.n(N),D=n(31),L=n(32),R=n.n(L),T=n(480);var Q=function(e){var t=e.content,n=e.children;return l.a.createElement(T.a,{inverted:!0,content:t,trigger:n})};function U(){var e=Object(D.a)([\"\\n  mutation likePost($postId: ID!) {\\n    likePost(postId: $postId) {\\n      id\\n      likes {\\n        id\\n        username\\n      }\\n      likeCount\\n    }\\n  }\\n\"]);return U=function(){return e},e}var B=R()(U()),q=function(e){var t=e.user,n=e.post,a=n.id,r=n.likeCount,m=n.likes,s=Object(o.useState)(!1),u=Object(i.a)(s,2),d=u[0],p=u[1];Object(o.useEffect)(function(){t&&m.find(function(e){return e.username===t.username})?p(!0):p(!1)},[t,m]);var b=Object(C.a)(B,{variables:{postId:a}}),E=Object(i.a)(b,1)[0],g=t?d?l.a.createElement(S.a,{color:\"teal\"},l.a.createElement($.a,{name:\"heart\"})):l.a.createElement(S.a,{color:\"teal\",basic:!0},l.a.createElement($.a,{name:\"heart\"})):l.a.createElement(S.a,{as:c.b,to:\"/login\",color:\"teal\",basic:!0},l.a.createElement($.a,{name:\"heart\"}));return l.a.createElement(S.a,{as:\"div\",labelPosition:\"right\",onClick:E},l.a.createElement(Q,{content:d?\"Unlike\":\"Like\"},g),l.a.createElement(x.a,{basic:!0,color:\"teal\",pointing:\"left\"},r))},z=n(478);function G(){var e=Object(D.a)([\"\\n  {\\n    getPosts {\\n      id\\n      body\\n      createdAt\\n      username\\n      likeCount\\n      likes {\\n        username\\n      }\\n      commentCount\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n    }\\n  }\\n\"]);return G=function(){return e},e}var M=R()(G());function H(){var e=Object(D.a)([\"\\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\\n    deleteComment(postId: $postId, commentId: $commentId) {\\n      id\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n      commentCount\\n    }\\n  }\\n\"]);return H=function(){return e},e}function F(){var e=Object(D.a)([\"\\n  mutation deletePost($postId: ID!) {\\n    deletePost(postId: $postId)\\n  }\\n\"]);return F=function(){return e},e}var V=R()(F()),W=R()(H()),J=function(e){var t=e.postId,n=e.commentId,a=e.callback,r=Object(o.useState)(!1),c=Object(i.a)(r,2),m=c[0],s=c[1],u=n?W:V,d=Object(C.a)(u,{update:function(e){if(s(!1),!n){var r=e.readQuery({query:M});r.getPosts=r.getPosts.filter(function(e){return e.id!==t}),e.writeQuery({query:M,data:r})}a&&a()},variables:{postId:t,commentId:n}}),p=Object(i.a)(d,1)[0];return l.a.createElement(l.a.Fragment,null,l.a.createElement(Q,{content:n?\"Delete comment\":\"Delete post\"},l.a.createElement(S.a,{as:\"div\",color:\"red\",floated:\"right\",onClick:function(){return s(!0)}},l.a.createElement($.a,{name:\"trash\",style:{margin:0}}))),l.a.createElement(z.a,{open:m,onCancel:function(){return s(!1)},onConfirm:p}))};var K=function(e){var t=e.post,n=t.body,a=t.createdAt,r=t.id,m=t.username,s=t.likeCount,i=t.commentCount,u=t.likes,d=Object(o.useContext)(g).user;return l.a.createElement(k.a,{fluid:!0},l.a.createElement(k.a.Content,null,l.a.createElement(P.a,{floated:\"right\",size:\"mini\",src:\"https://react.semantic-ui.com/images/avatar/large/molly.png\"}),l.a.createElement(k.a.Header,null,m),l.a.createElement(k.a.Meta,{as:c.b,to:\"/posts/\".concat(r)},A()(a).fromNow(!0)),l.a.createElement(k.a.Description,null,n)),l.a.createElement(k.a.Content,null,l.a.createElement(\"iframe\",{src:\"//player.bilibili.com/player.html?aid=8438275&bvid=BV1hx41117tE&cid=13892333&page=1\",scrolling:\"no\",border:\"0\",frameborder:\"no\",framespacing:\"0\",allowfullscreen:\"true\"},\" \")),l.a.createElement(k.a.Content,{extra:!0},l.a.createElement(q,{user:d,post:{id:r,likes:u,likeCount:s}}),l.a.createElement(Q,{content:\"Comment on post\"},l.a.createElement(S.a,{labelPosition:\"right\",as:c.b,to:\"/posts/\".concat(r)},l.a.createElement(S.a,{color:\"blue\",basic:!0},l.a.createElement($.a,{name:\"comments\"})),l.a.createElement(x.a,{basic:!0,color:\"blue\",pointing:\"left\"},i))),d&&d.username===m&&l.a.createElement(J,{postId:r})))},X=n(277),Y=n(477),Z=n(40),_=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=Object(o.useState)(t),a=Object(i.a)(n,2),r=a[0],l=a[1];return{onChange:function(e){l(Object(u.a)({},r,Object(Z.a)({},e.target.name,e.target.value)))},onSubmit:function(t){t.preventDefault(),e()},values:r}};function ee(){var e=Object(D.a)([\"\\n  mutation createPost($body: String!) {\\n    createPost(body: $body) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likes {\\n        id\\n        username\\n        createdAt\\n      }\\n      likeCount\\n      comments {\\n        id\\n        body\\n        username\\n        createdAt\\n      }\\n      commentCount\\n    }\\n  }\\n\"]);return ee=function(){return e},e}var te=R()(ee()),ne=function(){var e=_(function(){c()},{body:\"\"}),t=e.values,n=e.onChange,a=e.onSubmit,r=Object(C.a)(te,{variables:t,update:function(e,n){var a=e.readQuery({query:M});a.getPosts=[n.data.createPost].concat(Object(X.a)(a.getPosts)),e.writeQuery({query:M,data:a}),t.body=\"\"}}),o=Object(i.a)(r,2),c=o[0],m=o[1].error;return l.a.createElement(l.a.Fragment,null,l.a.createElement(Y.a,{onSubmit:a},l.a.createElement(\"h2\",null,\"Create a post:\"),l.a.createElement(Y.a.Field,null,l.a.createElement(Y.a.Input,{placeholder:\"Hi World!\",name:\"body\",onChange:n,value:t.body,error:!!m}),l.a.createElement(S.a,{type:\"submit\",color:\"teal\"},\"Submit\"))),m&&l.a.createElement(\"div\",{className:\"ui error message\",style:{marginBottom:20}},l.a.createElement(\"ul\",{className:\"list\"},l.a.createElement(\"li\",null,m.graphQLErrors[0].message))))};var ae=function(){var e=Object(o.useContext)(g).user,t=Object(C.b)(M),n=t.loading,a=t.data.getPosts;return l.a.createElement(w.a,{columns:1},l.a.createElement(w.a.Row,{className:\"page-title\"},l.a.createElement(\"h1\",null,\"Recent Posts\")),l.a.createElement(w.a.Row,null,e&&l.a.createElement(w.a.Column,null,l.a.createElement(ne,null)),n?l.a.createElement(\"h1\",null,\"Loading posts..\"):l.a.createElement(I.a.Group,null,a&&a.map(function(e){return l.a.createElement(w.a.Column,{key:e.id,style:{marginBottom:20}},l.a.createElement(K,{post:e}))}))))};function re(){var e=Object(D.a)([\"\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);return re=function(){return e},e}var oe=R()(re()),le=function(e){var t=Object(o.useContext)(g),n=Object(o.useState)({}),a=Object(i.a)(n,2),r=a[0],c=a[1],m=_(function(){E()},{username:\"\",password:\"\"}),s=m.onChange,u=m.onSubmit,d=m.values,p=Object(C.a)(oe,{update:function(n,a){var r=a.data.login;t.login(r),e.history.push(\"/\")},onError:function(e){c(e.graphQLErrors[0].extensions.exception.errors)},variables:d}),b=Object(i.a)(p,2),E=b[0],f=b[1].loading;return l.a.createElement(\"div\",{className:\"form-container\"},l.a.createElement(Y.a,{onSubmit:u,noValidate:!0,className:f?\"loading\":\"\"},l.a.createElement(\"h1\",null,\"Login\"),l.a.createElement(Y.a.Input,{label:\"Username\",placeholder:\"Username..\",name:\"username\",type:\"text\",value:d.username,error:!!r.username,onChange:s}),l.a.createElement(Y.a.Input,{label:\"Password\",placeholder:\"Password..\",name:\"password\",type:\"password\",value:d.password,error:!!r.password,onChange:s}),l.a.createElement(S.a,{type:\"submit\",primary:!0},\"Login\")),Object.keys(r).length>0&&l.a.createElement(\"div\",{className:\"ui error message\"},l.a.createElement(\"ul\",{className:\"list\"},Object.values(r).map(function(e){return l.a.createElement(\"li\",{key:e},e)}))))};function ce(){var e=Object(D.a)([\"\\n  mutation register(\\n    $username: String!\\n    $email: String!\\n    $password: String!\\n    $confirmPassword: String!\\n  ) {\\n    register(\\n      registerInput: {\\n        username: $username\\n        email: $email\\n        password: $password\\n        confirmPassword: $confirmPassword\\n      }\\n    ) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);return ce=function(){return e},e}var me=R()(ce()),se=function(e){var t=Object(o.useContext)(g),n=Object(o.useState)({}),a=Object(i.a)(n,2),r=a[0],c=a[1],m=_(function(){E()},{username:\"\",email:\"\",password:\"\",confirmPassword:\"\"}),s=m.onChange,u=m.onSubmit,d=m.values,p=Object(C.a)(me,{update:function(n,a){var r=a.data.register;t.login(r),e.history.push(\"/\")},onError:function(e){c(e.graphQLErrors[0].extensions.exception.errors)},variables:d}),b=Object(i.a)(p,2),E=b[0],f=b[1].loading;return l.a.createElement(\"div\",{className:\"form-container\"},l.a.createElement(Y.a,{onSubmit:u,noValidate:!0,className:f?\"loading\":\"\"},l.a.createElement(\"h1\",null,\"Register\"),l.a.createElement(Y.a.Input,{label:\"Username\",placeholder:\"Username..\",name:\"username\",type:\"text\",value:d.username,error:!!r.username,onChange:s}),l.a.createElement(Y.a.Input,{label:\"Email\",placeholder:\"Email..\",name:\"email\",type:\"email\",value:d.email,error:!!r.email,onChange:s}),l.a.createElement(Y.a.Input,{label:\"Password\",placeholder:\"Password..\",name:\"password\",type:\"password\",value:d.password,error:!!r.password,onChange:s}),l.a.createElement(Y.a.Input,{label:\"Confirm Password\",placeholder:\"Confirm Password..\",name:\"confirmPassword\",type:\"password\",value:d.confirmPassword,error:!!r.confirmPassword,onChange:s}),l.a.createElement(S.a,{type:\"submit\",primary:!0},\"Register\")),Object.keys(r).length>0&&l.a.createElement(\"div\",{className:\"ui error message\"},l.a.createElement(\"ul\",{className:\"list\"},Object.values(r).map(function(e){return l.a.createElement(\"li\",{key:e},e)}))))};function ie(){var e=Object(D.a)([\"\\n  query($postId: ID!) {\\n    getPost(postId: $postId) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likeCount\\n      likes {\\n        username\\n      }\\n      commentCount\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n    }\\n  }\\n\"]);return ie=function(){return e},e}function ue(){var e=Object(D.a)([\"\\n  mutation($postId: String!, $body: String!) {\\n    createComment(postId: $postId, body: $body) {\\n      id\\n      comments {\\n        id\\n        body\\n        createdAt\\n        username\\n      }\\n      commentCount\\n    }\\n  }\\n\"]);return ue=function(){return e},e}var de=R()(ue()),pe=R()(ie()),be=function(e){var t,n=e.match.params.postId,a=Object(o.useContext)(g).user,r=Object(o.useRef)(null),c=Object(o.useState)(\"\"),m=Object(i.a)(c,2),s=m[0],u=m[1],d=Object(C.b)(pe,{variables:{postId:n}}).data.getPost,p=Object(C.a)(de,{update:function(){u(\"\"),r.current.blur()},variables:{postId:n,body:s}}),b=Object(i.a)(p,1)[0];if(d){var E=d.id,f=d.body,v=d.createdAt,h=d.username,j=d.comments,y=d.likes,O=d.likeCount,I=d.commentCount;t=l.a.createElement(w.a,null,l.a.createElement(w.a.Row,null,l.a.createElement(w.a.Column,{width:2},l.a.createElement(P.a,{src:\"https://react.semantic-ui.com/images/avatar/large/molly.png\",size:\"small\",float:\"right\"})),l.a.createElement(w.a.Column,{width:10},l.a.createElement(k.a,{fluid:!0},l.a.createElement(k.a.Content,null,l.a.createElement(k.a.Header,null,h),l.a.createElement(k.a.Meta,null,A()(v).fromNow()),l.a.createElement(k.a.Description,null,f)),l.a.createElement(\"hr\",null),l.a.createElement(k.a.Content,{extra:!0},l.a.createElement(q,{user:a,post:{id:E,likeCount:O,likes:y}}),l.a.createElement(Q,{content:\"Comment on post\"},l.a.createElement(S.a,{as:\"div\",labelPosition:\"right\",onClick:function(){return console.log(\"Comment on post\")}},l.a.createElement(S.a,{basic:!0,color:\"blue\"},l.a.createElement($.a,{name:\"comments\"})),l.a.createElement(x.a,{basic:!0,color:\"blue\",pointing:\"left\"},I))),a&&a.username===h&&l.a.createElement(J,{postId:E,callback:function(){e.history.push(\"/\")}}))),a&&l.a.createElement(k.a,{fluid:!0},l.a.createElement(k.a.Content,null,l.a.createElement(\"p\",null,\"Post a comment\"),l.a.createElement(Y.a,null,l.a.createElement(\"div\",{className:\"ui action input fluid\"},l.a.createElement(\"input\",{type:\"text\",placeholder:\"Comment..\",name:\"comment\",value:s,onChange:function(e){return u(e.target.value)},ref:r}),l.a.createElement(\"button\",{type:\"submit\",className:\"ui button teal\",disabled:\"\"===s.trim(),onClick:b},\"Submit\"))))),j.map(function(e){return l.a.createElement(k.a,{fluid:!0,key:e.id},l.a.createElement(k.a.Content,null,a&&a.username===e.username&&l.a.createElement(J,{postId:E,commentId:e.id}),l.a.createElement(k.a.Header,null,e.username),l.a.createElement(k.a.Meta,null,A()(e.createdAt).fromNow()),l.a.createElement(k.a.Description,null,e.body)))}))))}else t=l.a.createElement(\"p\",null,\"Loading post..\");return t};var Ee=function(){return l.a.createElement(v,null,l.a.createElement(c.a,null,l.a.createElement(s.a,null,l.a.createElement(O,null),l.a.createElement(m.b,{exact:!0,path:\"/\",component:ae}),l.a.createElement(j,{exact:!0,path:\"/login\",component:le}),l.a.createElement(j,{exact:!0,path:\"/register\",component:se}),l.a.createElement(m.b,{exact:!0,path:\"/posts/:postId\",component:be}))))},ge=n(67),fe=n(276),ve=n(279),he=n(25),je=n(278),ye=Object(ve.a)({uri:\"http://192.168.1.101:5000\"}),Oe=Object(je.a)(function(){var e=localStorage.getItem(\"jwtToken\");return{headers:{Authorization:e?\"Bearer \".concat(e):\"\"}}}),Ce=new ge.c({link:Oe.concat(ye),cache:new fe.a}),we=l.a.createElement(he.a,{client:Ce},l.a.createElement(Ee,null));r.a.render(we,document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[288,1,2]]]);","extractedComments":[]}