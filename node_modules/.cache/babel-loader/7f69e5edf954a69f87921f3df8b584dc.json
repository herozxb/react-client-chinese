{"ast":null,"code":"var _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js\";\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nconst options = [{\n  key: 'English',\n  text: 'English',\n  value: 'English'\n}, {\n  key: 'French',\n  text: 'French',\n  value: 'French'\n}, {\n  key: 'Spanish',\n  text: 'Spanish',\n  value: 'Spanish'\n}, {\n  key: 'German',\n  text: 'German',\n  value: 'German'\n}, {\n  key: 'Chinese',\n  text: 'Chinese',\n  value: 'Chinese'\n}];\n\nfunction Home() {\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user;\n\n  const _useQuery = useQuery(FETCH_POSTS_QUERY),\n        loading = _useQuery.loading,\n        posts = _useQuery.data.getPosts;\n\n  state = {\n    options\n  };\n\n  handleAddition = (e, {\n    value\n  }) => {\n    this.setState(prevState => ({\n      options: [{\n        text: value,\n        value\n      }, ...prevState.options]\n    }));\n  };\n\n  handleChange = (e, {\n    value\n  }) => this.setState({\n    currentValues: value\n  });\n\n  return React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u6700\\u65B0\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, user && React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(Transition.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, posts && posts.map(post => React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(PostCard, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js"],"names":["React","useContext","useQuery","Grid","Transition","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","options","key","text","value","Home","user","loading","posts","data","getPosts","state","handleAddition","e","setState","prevState","handleChange","currentValues","map","post","id","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,GAAG,EAAE,SAAP;AAAkBC,EAAAA,IAAI,EAAE,SAAxB;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CADc,EAEd;AAAEF,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,IAAI,EAAE,QAAvB;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAFc,EAGd;AAAEF,EAAAA,GAAG,EAAE,SAAP;AAAkBC,EAAAA,IAAI,EAAE,SAAxB;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CAHc,EAId;AAAEF,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,IAAI,EAAE,QAAvB;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAJc,EAKd;AAAEF,EAAAA,GAAG,EAAE,SAAP;AAAkBC,EAAAA,IAAI,EAAE,SAAxB;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CALc,CAAhB;;AAQA,SAASC,IAAT,GAAgB;AAAA,sBACGZ,UAAU,CAACI,WAAD,CADb;AAAA,QACNS,IADM,eACNA,IADM;;AAAA,oBAKVZ,QAAQ,CAACM,iBAAD,CALE;AAAA,QAGZO,OAHY,aAGZA,OAHY;AAAA,QAIMC,KAJN,aAIZC,IAJY,CAIJC,QAJI;;AAQdC,EAAAA,KAAK,GAAG;AAAEV,IAAAA;AAAF,GAAR;;AAEAW,EAAAA,cAAc,GAAG,CAACC,CAAD,EAAI;AAAET,IAAAA;AAAF,GAAJ,KAAkB;AACjC,SAAKU,QAAL,CAAeC,SAAD,KAAgB;AAC5Bd,MAAAA,OAAO,EAAE,CAAC;AAAEE,QAAAA,IAAI,EAAEC,KAAR;AAAeA,QAAAA;AAAf,OAAD,EAAyB,GAAGW,SAAS,CAACd,OAAtC;AADmB,KAAhB,CAAd;AAGD,GAJD;;AAMAe,EAAAA,YAAY,GAAG,CAACH,CAAD,EAAI;AAAET,IAAAA;AAAF,GAAJ,KAAkB,KAAKU,QAAL,CAAc;AAAEG,IAAAA,aAAa,EAAEb;AAAjB,GAAd,CAAjC;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,IACH,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAMGC,OAAO,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,GAGN,oBAAC,UAAD,CAAY,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,IACJA,KAAK,CAACU,GAAN,CAAWC,IAAD,IACR,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAvB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFJ,CATJ,CAJF,CADF;AA0BD;;AAED,eAAed,IAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\n\nconst options = [\n  { key: 'English', text: 'English', value: 'English' },\n  { key: 'French', text: 'French', value: 'French' },\n  { key: 'Spanish', text: 'Spanish', value: 'Spanish' },\n  { key: 'German', text: 'German', value: 'German' },\n  { key: 'Chinese', text: 'Chinese', value: 'Chinese' },\n]\n\nfunction Home() {\n  const { user } = useContext(AuthContext);\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n\n\n  state = { options }\n\n  handleAddition = (e, { value }) => {\n    this.setState((prevState) => ({\n      options: [{ text: value, value }, ...prevState.options],\n    }))\n  }\n\n  handleChange = (e, { value }) => this.setState({ currentValues: value })\n\n  return (\n    <Grid columns={1}>\n      <Grid.Row className=\"page-title\">\n        <h1>最新</h1>\n      </Grid.Row>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n            <PostForm />\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>loading...</h1>\n        ) : (\n          <Transition.Group>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}