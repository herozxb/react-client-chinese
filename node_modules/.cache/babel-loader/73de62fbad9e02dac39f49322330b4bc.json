{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Register.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation register(\\n    $username: String!\\n    $email: String!\\n    $password: String!\\n    $confirmPassword: String!\\n  ) {\\n    register(\\n      registerInput: {\\n        username: $username\\n        email: $email\\n        password: $password\\n        confirmPassword: $confirmPassword\\n      }\\n    ) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\n\nfunction Register(props) {\n  const context = useContext(AuthContext);\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useForm = useForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        onChange = _useForm.onChange,\n        onSubmit = _useForm.onSubmit,\n        values = _useForm.values;\n\n  const _useMutation = useMutation(REGISTER_USER, {\n    update(_, {\n      data: {\n        register: userData\n      }\n    }) {\n      context.login(userData);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        addUser = _useMutation2[0],\n        loading = _useMutation2[1].loading;\n\n  function registerUser() {\n    addUser();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? 'loading' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\u6CE8\\u518C\\u9875\\u9762\"), React.createElement(Form.Input, {\n    label: \"\\u7528\\u6237\\u540D\",\n    placeholder: \"\\u540D\\u79F0...\",\n    name: \"username\",\n    type: \"text\",\n    value: values.username,\n    error: errors.username ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: \"\\u90AE\\u7BB1\",\n    placeholder: \"\\u90AE\\u7BB1...\",\n    name: \"email\",\n    type: \"email\",\n    value: values.email,\n    error: errors.email ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: \"\\u5BC6\\u7801\",\n    placeholder: \"\\u5BC6\\u7801...\",\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    error: errors.password ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: \"\\u518D\\u6B21\\u8F93\\u5165\\u5BC6\\u7801\",\n    placeholder: \"\\u5BC6\\u7801...\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: values.confirmPassword,\n    error: errors.confirmPassword ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Register\")), Object.keys(errors).length > 0 && React.createElement(\"div\", {\n    className: \"ui error message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, Object.values(errors).map(value => React.createElement(\"li\", {\n    key: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, value)))));\n}\n\nconst REGISTER_USER = gql(_templateObject());\nexport default Register;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Register.js"],"names":["React","useContext","useState","Button","Form","useMutation","gql","AuthContext","useForm","Register","props","context","errors","setErrors","registerUser","username","email","password","confirmPassword","onChange","onSubmit","values","REGISTER_USER","update","_","data","register","userData","login","history","push","onError","err","graphQLErrors","extensions","exception","variables","addUser","loading","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\n\nfunction Register(props) {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(\n      _,\n      {\n        data: { register: userData }\n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function registerUser() {\n    addUser();\n  }\n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n        <h1>注册页面</h1>\n        <Form.Input\n          label=\"用户名\"\n          placeholder=\"名称...\"\n          name=\"username\"\n          type=\"text\"\n          value={values.username}\n          error={errors.username ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"邮箱\"\n          placeholder=\"邮箱...\"\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          error={errors.email ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"密码\"\n          placeholder=\"密码...\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"再次输入密码\"\n          placeholder=\"密码...\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={values.confirmPassword}\n          error={errors.confirmPassword ? true : false}\n          onChange={onChange}\n        />\n        <Button type=\"submit\" primary>\n          Register\n        </Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}