{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/components/LikeButton.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation likePost($postId: ID!) {\\n    likePost(postId: $postId) {\\n      id\\n      likes {\\n        id\\n        username\\n      }\\n      likeCount\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Label, Icon } from 'semantic-ui-react';\nimport MyPopup from '../util/MyPopup';\n\nfunction LikeButton({\n  user,\n  post: {\n    id,\n    likeCount,\n    likes\n  }\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        liked = _useState2[0],\n        setLiked = _useState2[1];\n\n  useEffect(() => {\n    if (user && likes.find(like => like.username === user.username)) {\n      setLiked(true);\n    } else setLiked(false);\n  }, [user, likes]);\n\n  const _useMutation = useMutation(LIKE_POST_MUTATION, {\n    variables: {\n      postId: id\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        likePost = _useMutation2[0];\n\n  const likeButton = user ? liked ? React.createElement(Button, {\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })) : React.createElement(Button, {\n    color: \"red\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : React.createElement(Button, {\n    as: Link,\n    to: \"/login\",\n    color: \"red\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n  return React.createElement(Button, {\n    as: \"div\",\n    labelPosition: \"right\",\n    onClick: likePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(MyPopup, {\n    content: liked ? 'Unlike' : 'Like',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, likeButton), React.createElement(Label, {\n    basic: true,\n    color: \"teal\",\n    pointing: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, likeCount));\n}\n\nconst LIKE_POST_MUTATION = gql(_templateObject());\nexport default LikeButton;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/components/LikeButton.js"],"names":["React","useEffect","useState","Link","useMutation","gql","Button","Label","Icon","MyPopup","LikeButton","user","post","id","likeCount","likes","liked","setLiked","find","like","username","LIKE_POST_MUTATION","variables","postId","likePost","likeButton"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,mBAApC;AAEA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,SAAN;AAAiBC,IAAAA;AAAjB;AAAd,CAApB,EAA8D;AAAA,oBAClCb,QAAQ,CAAC,KAAD,CAD0B;AAAA;AAAA,QACrDc,KADqD;AAAA,QAC9CC,QAD8C;;AAG5DhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAI,IAAII,KAAK,CAACG,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBT,IAAI,CAACS,QAA5C,CAAZ,EAAmE;AACjEH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEOA,QAAQ,CAAC,KAAD,CAAR;AACR,GAJQ,EAIN,CAACN,IAAD,EAAOI,KAAP,CAJM,CAAT;;AAH4D,uBASzCX,WAAW,CAACiB,kBAAD,EAAqB;AACjDC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEV;AAAV;AADsC,GAArB,CAT8B;AAAA;AAAA,QASrDW,QATqD;;AAa5D,QAAMC,UAAU,GAAGd,IAAI,GACrBK,KAAK,GACH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADG,GAKH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,KAAK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANmB,GAWrB,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAEb,IAAZ;AAAkB,IAAA,EAAE,EAAC,QAArB;AAA8B,IAAA,KAAK,EAAC,KAApC;AAA0C,IAAA,KAAK,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF;AAgBA,SACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,aAAa,EAAC,OAA/B;AAAuC,IAAA,OAAO,EAAEqB,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAER,KAAK,GAAG,QAAH,GAAc,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CS,UAA9C,CADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,QAAQ,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SADH,CAFF,CADF;AAQD;;AAED,MAAMO,kBAAkB,GAAGhB,GAAH,mBAAxB;AAaA,eAAeK,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Label, Icon } from 'semantic-ui-react';\n\nimport MyPopup from '../util/MyPopup';\n\nfunction LikeButton({ user, post: { id, likeCount, likes } }) {\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    if (user && likes.find((like) => like.username === user.username)) {\n      setLiked(true);\n    } else setLiked(false);\n  }, [user, likes]);\n\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\n    variables: { postId: id }\n  });\n\n  const likeButton = user ? (\n    liked ? (\n      <Button color=\"red\">\n        <Icon name=\"heart\" />\n      </Button>\n    ) : (\n      <Button color=\"red\" basic>\n        <Icon name=\"heart\" />\n      </Button>\n    )\n  ) : (\n    <Button as={Link} to=\"/login\" color=\"red\" basic>\n      <Icon name=\"heart\" />\n    </Button>\n  );\n\n  return (\n    <Button as=\"div\" labelPosition=\"right\" onClick={likePost}>\n      <MyPopup content={liked ? 'Unlike' : 'Like'}>{likeButton}</MyPopup>\n      <Label basic color=\"teal\" pointing=\"left\">\n        {likeCount}\n      </Label>\n    </Button>\n  );\n}\n\nconst LIKE_POST_MUTATION = gql`\n  mutation likePost($postId: ID!) {\n    likePost(postId: $postId) {\n      id\n      likes {\n        id\n        username\n      }\n      likeCount\n    }\n  }\n`;\n\nexport default LikeButton;\n"]},"metadata":{},"sourceType":"module"}