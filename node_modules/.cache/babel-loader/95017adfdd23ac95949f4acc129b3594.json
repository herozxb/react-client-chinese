{"ast":null,"code":"var _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition, Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\nfunction Home() {\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user;\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n\n  let thoughtArea = window.myVar == null ? \"default\" : window.myVar;\n  console.log(\"====window.myVar======\");\n  console.log(thoughtArea);\n  useEffect(() => {\n    console.log(\"====useEffect0.1======\");\n    thoughtArea = window.myVar == null ? \"default\" : window.myVar;\n    console.log(thoughtArea);\n  });\n\n  const _useQuery = useQuery(FETCH_AREA_QUERY, {\n    variables: {\n      thoughtArea\n    }\n  }),\n        loading = _useQuery.loading,\n        posts = _useQuery.data.getAreaPosts;\n\n  return React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, user && React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(Transition.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\u6700\\u65B0\"))), posts && posts.map(post => React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(PostCard, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js"],"names":["React","useContext","useState","useEffect","useQuery","Grid","Transition","Dropdown","Divider","Header","Icon","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","FETCH_AREA_QUERY","Home","user","thoughtArea","window","myVar","console","log","variables","loading","posts","data","getAreaPosts","map","post","id","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA0BC,QAA1B,EAAoCC,OAApC,EAA6CC,MAA7C,EAAqDC,IAArD,QAAiE,mBAAjE;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,iBAApD;;AAGA,SAASC,IAAT,GAAgB;AAAA,sBAEGf,UAAU,CAACU,WAAD,CAFb;AAAA,QAENM,IAFM,eAENA,IAFM;AAId;;;;;;;;AAOA,MAAIC,WAAW,GAAGC,MAAM,CAACC,KAAP,IAAgB,IAAhB,GAAuB,SAAvB,GAAmCD,MAAM,CAACC,KAA5D;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAJ,IAAAA,WAAW,GAAGC,MAAM,CAACC,KAAP,IAAgB,IAAhB,GAAuB,SAAvB,GAAmCD,MAAM,CAACC,KAAxD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACH,GAJQ,CAAT;;AAfc,oBAyBVd,QAAQ,CAACW,gBAAD,EACV;AACEQ,IAAAA,SAAS,EAAE;AACTL,MAAAA;AADS;AADb,GADU,CAzBE;AAAA,QAuBZM,OAvBY,aAuBZA,OAvBY;AAAA,QAwBUC,KAxBV,aAwBZC,IAxBY,CAwBJC,YAxBI;;AAiCd,SACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,IACH,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAMGO,OAAO,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,GAGN,oBAAC,UAAD,CAAY,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,UAAU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB,CADF,CADF,EAIGC,KAAK,IACJA,KAAK,CAACG,GAAN,CAAWC,IAAD,IACR,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAvB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CALJ,CATJ,CADF,CADF;AA0BD;;AAED,eAAeb,IAAf","sourcesContent":["import React, { useContext, useState, useEffect} from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition,Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\n\nfunction Home() {\n\n  const { user } = useContext(AuthContext);\n\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n  let thoughtArea = window.myVar == null ? \"default\" : window.myVar ;\n  \n  console.log(\"====window.myVar======\");\n  console.log(thoughtArea);\n  useEffect(() => {\n      console.log(\"====useEffect0.1======\");\n      thoughtArea = window.myVar == null ? \"default\" : window.myVar ;\n      console.log(thoughtArea);\n  });\n\n\n  const {\n    loading,\n    data: { getAreaPosts: posts } \n  } = useQuery(FETCH_AREA_QUERY,\n    {\n      variables: {\n        thoughtArea\n    },\n  }\n  );\n\n  return (\n    <Grid columns={1}>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n            <PostForm />\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>loading...</h1>\n        ) : (\n          <Transition.Group>\n            <Grid.Column>\n              <Divider horizontal><h3>最新</h3></Divider>\n            </Grid.Column>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}