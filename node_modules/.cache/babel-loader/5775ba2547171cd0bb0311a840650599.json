{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createAreaPost($body: String!,$thoughtArea: String!) {\\n    createAreaPost(body: $body, thoughtArea: $thoughtArea) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likes {\\n        id\\n        username\\n        createdAt\\n      }\\n      likeCount\\n      comments {\\n        id\\n        body\\n        username\\n        createdAt\\n      }\\n      commentCount\\n      thoughtArea\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  query($thoughtArea: String!) {\\n    getAreaPosts(thoughtArea: $thoughtArea) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likeCount\\n      likes {\\n        username\\n      }\\n      commentCount\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n      thoughtArea\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    getPosts {\\n      id\\n      body\\n      createdAt\\n      username\\n      likeCount\\n      likes {\\n        username\\n      }\\n      commentCount\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport const FETCH_POSTS_QUERY = gql(_templateObject());\nexport const FETCH_AREA_QUERY = gql(_templateObject2());\nexport const CREATE_AREA_POST_MUTATION = gql(_templateObject3());","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/util/graphql.js"],"names":["gql","FETCH_POSTS_QUERY","FETCH_AREA_QUERY","CREATE_AREA_POST_MUTATION"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;AAuBP,OAAO,MAAME,gBAAgB,GAAGF,GAAH,oBAAtB;AAyBP,OAAO,MAAMG,yBAAyB,GAAGH,GAAH,oBAA/B","sourcesContent":["import gql from 'graphql-tag';\n\nexport const FETCH_POSTS_QUERY = gql`\n  {\n    getPosts {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\n\nexport const FETCH_AREA_QUERY = gql`\n  query($thoughtArea: String!) {\n    getAreaPosts(thoughtArea: $thoughtArea) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n      thoughtArea\n    }\n  }\n`;\n\n\n\nexport const CREATE_AREA_POST_MUTATION = gql`\n  mutation createAreaPost($body: String!,$thoughtArea: String!) {\n    createAreaPost(body: $body, thoughtArea: $thoughtArea) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n      thoughtArea\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}