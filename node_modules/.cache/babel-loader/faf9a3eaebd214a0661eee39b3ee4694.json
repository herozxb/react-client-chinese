{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/profile.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  query($postId: ID!) {\\n    getPost(postId: $postId) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likeCount\\n      likes {\\n        username\\n      }\\n      commentCount\\n      comments {\\n        id\\n        username\\n        createdAt\\n        body\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation($postId: String!, $body: String!) {\\n    createComment(postId: $postId, body: $body) {\\n      id\\n      comments {\\n        id\\n        body\\n        createdAt\\n        username\\n      }\\n      commentCount\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState, useRef } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport { Button, Card, Form, Grid, Image, Icon, Label, Menu, Segment } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\nimport LikeButton from '../components/LikeButton';\nimport DeleteButton from '../components/DeleteButton';\nimport MyPopup from '../util/MyPopup';\n\nfunction Profile(props) {\n  const postId = props.match.params.postId;\n\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user;\n\n  const commentInputRef = useRef(null);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        comment = _useState2[0],\n        setComment = _useState2[1];\n\n  const _useQuery = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  }),\n        getPost = _useQuery.data.getPost; ////////////////////////////////////////////////////////////////////////\n\n\n  const _useState3 = useState({\n    activeItem: 'home'\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        state = _useState4[0],\n        setState = _useState4[1]; //const state = { activeItem: 'home' }\n\n\n  const handleItemClick = (e, {\n    name\n  }) => setState({\n    activeItem: name\n  });\n\n  const context = useContext(AuthContext);\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errors = _useState6[0],\n        setErrors = _useState6[1];\n\n  const _useForm = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  }),\n        onChange = _useForm.onChange,\n        onSubmit = _useForm.onSubmit,\n        values = _useForm.values;\n\n  const _useMutation = useMutation(LOGIN_USER, {\n    update(_, {\n      data: {\n        login: userData\n      }\n    }) {\n      context.login(userData);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        loginUser = _useMutation2[0],\n        loading = _useMutation2[1].loading;\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  const activeItem = state.activeItem;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    centered: true,\n    columns: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    centered: true,\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\",\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Daniel\"), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Joined in 2016\"), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Daniel is a comedian living in Nashville.\")), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), \"10 Friends\")))), React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, username), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, moment(createdAt).fromNow()), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, body)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(LikeButton, {\n    user: user,\n    post: {\n      id,\n      likeCount,\n      likes\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(MyPopup, {\n    content: \"Comment on post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Button, {\n    as: \"div\",\n    labelPosition: \"right\",\n    onClick: () => console.log('Comment on post'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    basic: true,\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(Label, {\n    basic: true,\n    color: \"blue\",\n    pointing: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, commentCount))), user && user.username === username && React.createElement(DeleteButton, {\n    postId: id,\n    callback: deletePostCallback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), user && React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Post a comment\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui action input fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Comment..\",\n    name: \"comment\",\n    value: comment,\n    onChange: event => setComment(event.target.value),\n    ref: commentInputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"ui button teal\",\n    disabled: comment.trim() === '',\n    onClick: submitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Submit\"))))), comments.map(comment => React.createElement(Card, {\n    fluid: true,\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, user && user.username === comment.username && React.createElement(DeleteButton, {\n    postId: id,\n    commentId: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, comment.username), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, moment(comment.createdAt).fromNow()), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, comment.body))))))); //return{}\n}\n\nconst SUBMIT_COMMENT_MUTATION = gql(_templateObject());\nconst FETCH_POST_QUERY = gql(_templateObject2());\nconst LOGIN_USER = gql(_templateObject3());\nexport default Profile;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/profile.js"],"names":["React","useContext","useState","useRef","gql","useQuery","useMutation","moment","Button","Card","Form","Grid","Image","Icon","Label","Menu","Segment","AuthContext","useForm","LikeButton","DeleteButton","MyPopup","Profile","props","postId","match","params","user","commentInputRef","comment","setComment","FETCH_POST_QUERY","variables","getPost","data","activeItem","state","setState","handleItemClick","e","name","context","errors","setErrors","loginUserCallback","username","password","onChange","onSubmit","values","LOGIN_USER","update","_","login","userData","history","push","onError","err","graphQLErrors","extensions","exception","loginUser","loading","createdAt","fromNow","body","id","likeCount","likes","console","log","commentCount","deletePostCallback","event","target","value","trim","submitComment","comments","map","SUBMIT_COMMENT_MUTATION"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n  Image,\n  Icon,\n  Label,\n  Menu, \n  Segment\n} from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\nimport LikeButton from '../components/LikeButton';\nimport DeleteButton from '../components/DeleteButton';\nimport MyPopup from '../util/MyPopup';\n\nfunction Profile(props) {\n\n  const postId = props.match.params.postId;\n  const { user } = useContext(AuthContext);\n  const commentInputRef = useRef(null);\n\n  const [comment, setComment] = useState('');\n\n  const {\n    data: { getPost }\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n\n\n\n////////////////////////////////////////////////////////////////////////\n  const [state, setState] = useState({ activeItem: 'home' });\n\n  //const state = { activeItem: 'home' }\n\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\n\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(\n      _,\n      {\n        data: { login: userData }   \n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n\n  const { activeItem } = state\n\n  return (\n      <div>\n        <Grid centered columns={2}>\n          <Grid.Column centered width={10}>\n            <Card>\n              <Image src='https://react.semantic-ui.com/images/avatar/large/daniel.jpg' wrapped ui={false} />\n              <Card.Content>\n                <Card.Header>Daniel</Card.Header>\n                <Card.Meta>Joined in 2016</Card.Meta>\n                <Card.Description>\n                  Daniel is a comedian living in Nashville.\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <a>\n                  <Icon name='user' />\n                  10 Friends\n                </a>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Card fluid>\n              <Card.Content>\n                <Card.Header>{username}</Card.Header>\n                <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\n                <Card.Description>{body}</Card.Description>\n              </Card.Content>\n              <hr />\n              <Card.Content extra>\n                <LikeButton user={user} post={{ id, likeCount, likes }} />\n                <MyPopup content=\"Comment on post\">\n                  <Button\n                    as=\"div\"\n                    labelPosition=\"right\"\n                    onClick={() => console.log('Comment on post')}\n                  >\n                    <Button basic color=\"blue\">\n                      <Icon name=\"comments\" />\n                    </Button>\n                    <Label basic color=\"blue\" pointing=\"left\">\n                      {commentCount}\n                    </Label>\n                  </Button>\n                </MyPopup>\n                {user && user.username === username && (\n                  <DeleteButton postId={id} callback={deletePostCallback} />\n                )}\n              </Card.Content>\n            </Card>\n            {user && (\n              <Card fluid>\n                <Card.Content>\n                  <p>Post a comment</p>\n                  <Form>\n                    <div className=\"ui action input fluid\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Comment..\"\n                        name=\"comment\"\n                        value={comment}\n                        onChange={(event) => setComment(event.target.value)}\n                        ref={commentInputRef}\n                      />\n                      <button\n                        type=\"submit\"\n                        className=\"ui button teal\"\n                        disabled={comment.trim() === ''}\n                        onClick={submitComment}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </Form>\n                </Card.Content>\n              </Card>\n            )}\n            {comments.map((comment) => (\n              <Card fluid key={comment.id}>\n                <Card.Content>\n                  {user && user.username === comment.username && (\n                    <DeleteButton postId={id} commentId={comment.id} />\n                  )}\n                  <Card.Header>{comment.username}</Card.Header>\n                  <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\n                  <Card.Description>{comment.body}</Card.Description>\n                </Card.Content>\n              </Card>\n            ))}\n          </Grid.Column>\n        </Grid>\n      </div>\n  );//return{}\n\n\n}\n\nconst SUBMIT_COMMENT_MUTATION = gql`\n  mutation($postId: String!, $body: String!) {\n    createComment(postId: $postId, body: $body) {\n      id\n      comments {\n        id\n        body\n        createdAt\n        username\n      }\n      commentCount\n    }\n  }\n`;\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}