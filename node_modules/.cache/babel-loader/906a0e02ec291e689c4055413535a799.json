{"ast":null,"code":"import _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition, Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\nfunction Home() {\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentValues = _useState2[0],\n        setCurrentValues = _useState2[1];\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n\n  let thoughtArea = \"Self_improvement\";\n  useEffect(() => {\n    console.log(\"====useEffect0.1======\");\n    thoughtArea = \"Relationship\";\n    console.log(thoughtArea);\n  });\n\n  const on_change_for_thought_area = (e, {\n    value\n  }) => {\n    //console.log(value);\n    setCurrentValues(value);\n  };\n\n  const _useQuery = useQuery(FETCH_AREA_QUERY, {\n    variables: {\n      thoughtArea\n    }\n  }),\n        loading = _useQuery.loading,\n        posts = _useQuery.data.getAreaPosts;\n\n  return React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"search\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    options: options,\n    placeholder: \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\",\n    search: true,\n    fluid: true,\n    selection: true,\n    allowAdditions: true,\n    scrolling: true,\n    value: currentValues,\n    onAddItem: null,\n    onChange: on_change_for_thought_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, user && React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(Transition.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\u6700\\u65B0\"))), posts && posts.map(post => React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(PostCard, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js"],"names":["React","useContext","useState","useEffect","useQuery","Grid","Transition","Dropdown","Divider","Header","Icon","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","FETCH_AREA_QUERY","Home","user","currentValues","setCurrentValues","thoughtArea","console","log","on_change_for_thought_area","e","value","variables","loading","posts","data","getAreaPosts","options","map","post","id","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect} from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition,Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\n\nfunction Home() {\n  const { user } = useContext(AuthContext);\n  const [currentValues,setCurrentValues] = useState([]);\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n  let thoughtArea = \"Self_improvement\";\n\n  useEffect(() => {\n      console.log(\"====useEffect0.1======\");\n      thoughtArea = \"Relationship\"\n      console.log(thoughtArea);\n  });\n\n  const on_change_for_thought_area = (e, { value }) => \n  {\n    //console.log(value);\n    setCurrentValues(value)\n  };\n\n\n\n  const {\n    loading,\n    data: { getAreaPosts: posts } \n  } = useQuery(FETCH_AREA_QUERY,\n    {\n      variables: {\n        thoughtArea\n    },\n  }\n  );\n\n  return (\n    <Grid columns={1}>\n      <Grid columns={1}>\n        <Grid.Row>\n          <Grid.Column>\n            <Divider horizontal>\n              <Header as='h3'>\n                <Icon name='search' color=\"blue\"/>\n                  搜索 思想 领域\n              </Header>\n            </Divider>\n          </Grid.Column>\n        <Grid.Column>\n          <Dropdown\n            options={options}\n            placeholder='搜索 思想 领域'\n            search\n            fluid\n            selection\n            allowAdditions\n            scrolling\n            value={currentValues}\n            onAddItem={null}\n            onChange={on_change_for_thought_area}\n          />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n            <PostForm />\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>loading...</h1>\n        ) : (\n          <Transition.Group>\n            <Grid.Column>\n              <Divider horizontal><h3>最新</h3></Divider>\n            </Grid.Column>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}