{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createAreaPost($body: String!,$thoughtArea: String!) {\\n    createAreaPost(body: $body, thoughtArea: $thoughtArea) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likes {\\n        id\\n        username\\n        createdAt\\n      }\\n      likeCount\\n      comments {\\n        id\\n        body\\n        username\\n        createdAt\\n      }\\n      commentCount\\n      thoughtArea\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState, useEffect, useMutation } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Button, Form, Grid, Transition, Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\nconst options = [{\n  key: '1',\n  text: '个人修养',\n  value: 'Self_improvement'\n}, {\n  key: '2',\n  text: '人际关系',\n  value: 'Relationship'\n}, {\n  key: '3',\n  text: '世界关系',\n  value: 'Wolrd'\n}, {\n  key: '4',\n  text: '健康',\n  value: 'Health'\n}, {\n  key: '5',\n  text: '成功',\n  value: 'Success'\n}, {\n  key: '6',\n  text: '梦想',\n  value: 'Dream'\n}, {\n  key: '7',\n  text: '改变世界',\n  value: 'Change_the_world'\n}, {\n  key: '8',\n  text: '勇敢去做',\n  value: 'Brave_to_do'\n}, {\n  key: '9',\n  text: 'Innovative Ideas',\n  value: 'Innovative Ideas'\n}, {\n  key: '10',\n  text: '工作',\n  value: 'Job'\n}, {\n  key: '11',\n  text: '开公司',\n  value: 'Company'\n}, {\n  key: '12',\n  text: '干',\n  value: 'do'\n}, {\n  key: '13',\n  text: '时间 Time',\n  value: 'Time'\n}, {\n  key: '14',\n  text: '痛苦 Pain',\n  value: 'Pain'\n}, {\n  key: '15',\n  text: '财富 Wealth',\n  value: 'Wealth'\n}, {\n  key: '16',\n  text: '说话',\n  value: 'Speak'\n}, {\n  key: '17',\n  text: '家庭',\n  value: 'Family'\n}, {\n  key: '18',\n  text: '年轻',\n  value: 'Young'\n}, {\n  key: '19',\n  text: '一念之差',\n  value: 'Danger_thought'\n}, {\n  key: '20',\n  text: '借口',\n  value: 'Excuse'\n}, {\n  key: '21',\n  text: '善与恶',\n  value: 'good_or_evil'\n}, {\n  key: '22',\n  text: '对付坏人',\n  value: 'Enemy'\n}, {\n  key: '23',\n  text: '正义 Justice',\n  value: 'Justice'\n}, {\n  key: '24',\n  text: '纪念 Memory',\n  value: 'Memory'\n}, {\n  key: '25',\n  text: '今天',\n  value: 'Today'\n}, {\n  key: '26',\n  text: '计划 Plan',\n  value: 'Plan'\n}, {\n  key: '27',\n  text: '科技革命',\n  value: 'Revolution'\n}];\n\nfunction Home() {\n  //const { values, onChange, onSubmit } = useForm(createPostCallback, {\n  //  body: ''\n  //});\n  //const [values, setValues] = useState('');\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        texts = _useState2[0],\n        setTexts = _useState2[1];\n\n  const _useState3 = useState('default'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        thoughtArea = _useState4[0],\n        setThoughtArea = _useState4[1]; //const [state,setState] = useState({options});\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentValues = _useState6[0],\n        setCurrentValues = _useState6[1];\n\n  const on_change_for_text = event => {\n    //setValues({ ...values, [event.target.name]: event.target.value });\n    setTexts(_objectSpread({}, texts, {\n      [event.target.name]: event.target.value\n    }));\n    console.log(\"=========for_input_text========\");\n    setThoughtArea(_objectSpread({}, thoughtArea, {\n      [\"thoughtArea\"]: currentValues\n    }));\n    console.log(_objectSpread({}, thoughtArea, {\n      [\"thoughtArea\"]: currentValues\n    }));\n  };\n\n  const on_change_for_thought_area = (e, {\n    value\n  }) => {\n    setCurrentValues(value);\n  };\n\n  const submit = event => {\n    event.preventDefault(); //createAreaPost();\n  }; ////////////////////////////////////////////////////////////\n\n\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user;\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n\n  let thoughtArea1 = \"Self_improvement\";\n  useEffect(() => {\n    console.log(\"====useEffect0.1======\");\n    thoughtArea1 = \"Relationship\";\n    console.log(thoughtArea1);\n  });\n\n  const _useQuery = useQuery(FETCH_AREA_QUERY, {\n    variables: {\n      thoughtArea: thoughtArea1\n    }\n  }),\n        loading = _useQuery.loading,\n        posts = _useQuery.data.getAreaPosts;\n\n  return React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, user && React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"search\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    options: options,\n    placeholder: \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\",\n    search: true,\n    fluid: true,\n    selection: true,\n    allowAdditions: true,\n    scrolling: true,\n    value: currentValues,\n    onAddItem: null,\n    onChange: on_change_for_thought_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })))), React.createElement(Form, {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"comments\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), \"\\u53D1\\u8868 \\u4F60\\u7684 \\u601D\\u60F3\")), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    placeholder: \"\\u4E16\\u754C \\u4F60\\u597D!\",\n    name: \"body\",\n    onChange: on_change_for_text,\n    value: texts.body //error={error ? true : false}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"\\u53D1\\u5E03\"))), error && React.createElement(\"div\", {\n    className: \"ui error message\",\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, error.graphQLErrors[0].message))))), loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(Transition.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"\\u6700\\u65B0\"))), posts && posts.map(post => React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(PostCard, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }))))));\n}\n\nconst CREATE_AREA_POST_MUTATION = gql(_templateObject());\nexport default Home;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js"],"names":["React","useContext","useState","useEffect","useMutation","useQuery","Button","Form","Grid","Transition","Dropdown","Divider","Header","Icon","gql","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","FETCH_AREA_QUERY","options","key","text","value","Home","texts","setTexts","thoughtArea","setThoughtArea","currentValues","setCurrentValues","on_change_for_text","event","target","name","console","log","on_change_for_thought_area","e","submit","preventDefault","user","thoughtArea1","variables","loading","posts","data","getAreaPosts","body","error","marginBottom","graphQLErrors","message","map","post","id","CREATE_AREA_POST_MUTATION"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useMutation} from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Button, Form, Grid, Transition,Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\n\nimport gql from 'graphql-tag';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY} from '../util/graphql';\n\nconst options = [\n  { key: '1', text: '个人修养', value: 'Self_improvement' },\n  { key: '2', text: '人际关系', value: 'Relationship' },\n  { key: '3', text: '世界关系', value: 'Wolrd' },\n  { key: '4', text: '健康', value: 'Health' },\n  { key: '5', text: '成功', value: 'Success' },\n  { key: '6', text: '梦想', value: 'Dream' },\n  { key: '7', text: '改变世界', value: 'Change_the_world' },\n  { key: '8', text: '勇敢去做', value: 'Brave_to_do' },\n  { key: '9', text: 'Innovative Ideas', value: 'Innovative Ideas' },\n  { key: '10', text: '工作', value: 'Job' },\n  { key: '11', text: '开公司', value: 'Company' },\n  { key: '12', text: '干', value: 'do' },\n  { key: '13', text: '时间 Time', value: 'Time' },\n  { key: '14', text: '痛苦 Pain', value: 'Pain' },\n  { key: '15', text: '财富 Wealth', value: 'Wealth' },\n  { key: '16', text: '说话', value: 'Speak' },\n  { key: '17', text: '家庭', value: 'Family' },\n  { key: '18', text: '年轻', value: 'Young' },\n  { key: '19', text: '一念之差', value: 'Danger_thought' },\n  { key: '20', text: '借口', value: 'Excuse' },\n  { key: '21', text: '善与恶', value: 'good_or_evil' },\n  { key: '22', text: '对付坏人', value: 'Enemy' },\n  { key: '23', text: '正义 Justice', value: 'Justice' },\n  { key: '24', text: '纪念 Memory', value: 'Memory' },\n  { key: '25', text: '今天', value: 'Today' },\n  { key: '26', text: '计划 Plan', value: 'Plan' },\n  { key: '27', text: '科技革命', value: 'Revolution' },\n]\n\n\n\nfunction Home() {\n  \n  //const { values, onChange, onSubmit } = useForm(createPostCallback, {\n  //  body: ''\n  //});\n\n  //const [values, setValues] = useState('');\n  const [texts, setTexts] = useState('');\n  const [thoughtArea, setThoughtArea] = useState('default');\n  //const [state,setState] = useState({options});\n  const [currentValues,setCurrentValues] = useState([]);\n\n\n  const on_change_for_text = (event) => {\n    //setValues({ ...values, [event.target.name]: event.target.value });\n    setTexts({ ...texts, [event.target.name]: event.target.value });\n    console.log(\"=========for_input_text========\");\n    setThoughtArea({ ...thoughtArea, [\"thoughtArea\"]: currentValues });\n    console.log({ ...thoughtArea, [\"thoughtArea\"]: currentValues });\n  };\n\n  const on_change_for_thought_area = (e, { value }) => \n  {\n    setCurrentValues(value)\n  };\n\n\n\n\n  const submit = (event) => {\n\n    event.preventDefault();\n    //createAreaPost();\n\n  };\n\n  ////////////////////////////////////////////////////////////\n\n\n  const { user } = useContext(AuthContext);\n\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n  let thoughtArea1 = \"Self_improvement\";\n\n  useEffect(() => {\n      console.log(\"====useEffect0.1======\");\n      thoughtArea1 = \"Relationship\"\n      console.log(thoughtArea1);\n  });\n\n\n  const {\n    loading,\n    data: { getAreaPosts: posts } \n  } = useQuery(FETCH_AREA_QUERY,\n    {\n      variables: {\n        thoughtArea : thoughtArea1\n    },\n  }\n  );\n\n  return (\n    <Grid columns={1}>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n                <>\n    <Grid columns={1}>\n      <Grid.Row>\n        <Grid.Column>\n          <Divider horizontal>\n            <Header as='h3'>\n              <Icon name='search' color=\"blue\"/>\n                搜索 思想 领域\n            </Header>\n          </Divider>\n        </Grid.Column>\n      <Grid.Column>\n        <Dropdown\n          options={options}\n          placeholder='搜索 思想 领域'\n          search\n          fluid\n          selection\n          allowAdditions\n          scrolling\n          value={currentValues}\n          onAddItem={null}\n          onChange={on_change_for_thought_area}\n        />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n      <Form onSubmit={submit}>\n          <Divider horizontal>\n            <Header as='h3'>\n              <Icon name='comments' color=\"blue\"/>\n                发表 你的 思想\n            </Header>\n          </Divider>\n        <Form.Field>\n          <Form.Input\n            placeholder=\"世界 你好!\"\n            name=\"body\"\n            onChange={on_change_for_text}\n            value={texts.body}\n            //error={error ? true : false}\n          />\n          <Button type=\"submit\" color=\"blue\">\n            发布\n          </Button>\n        </Form.Field>\n      </Form>\n      {error && (\n        <div className=\"ui error message\" style={{ marginBottom: 20 }}>\n          <ul className=\"list\">\n            <li>{error.graphQLErrors[0].message}</li>\n          </ul>\n        </div>\n      )}\n    </>\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>loading...</h1>\n        ) : (\n          <Transition.Group>\n            <Grid.Column>\n              <Divider horizontal><h3>最新</h3></Divider>\n            </Grid.Column>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\n\nconst CREATE_AREA_POST_MUTATION = gql`\n  mutation createAreaPost($body: String!,$thoughtArea: String!) {\n    createAreaPost(body: $body, thoughtArea: $thoughtArea) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n      thoughtArea\n    }\n  }\n`;\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}