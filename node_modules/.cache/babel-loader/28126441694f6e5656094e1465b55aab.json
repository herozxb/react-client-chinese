{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Login.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\nimport profile from './profile';\nconst IDContext = createContext({\n  user: null,\n  login: userData => {},\n  logout: () => {}\n});\n\nfunction Login(props) {\n  const context = useContext(AuthContext);\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useForm = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  }),\n        onChange = _useForm.onChange,\n        onSubmit = _useForm.onSubmit,\n        values = _useForm.values;\n\n  const _useMutation = useMutation(LOGIN_USER, {\n    update(_, {\n      data: {\n        login: userData\n      }\n    }) {\n      context.login(userData);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        loginUser = _useMutation2[0],\n        loading = _useMutation2[1].loading;\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? 'loading' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Form.Input, {\n    label: \"Username\",\n    placeholder: \"Username..\",\n    name: \"username\",\n    type: \"text\",\n    value: values.username,\n    error: errors.username ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: \"Password\",\n    placeholder: \"Password..\",\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    error: errors.password ? true : false,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Login\")), Object.keys(errors).length > 0 && React.createElement(\"div\", {\n    className: \"ui error message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, Object.values(errors).map(value => React.createElement(\"li\", {\n    key: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, value)))));\n}\n\nconst LOGIN_USER = gql(_templateObject());\nexport default Login;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Login.js"],"names":["React","useContext","useState","Button","Form","useMutation","gql","AuthContext","useForm","profile","IDContext","createContext","user","login","userData","logout","Login","props","context","errors","setErrors","loginUserCallback","username","password","onChange","onSubmit","values","LOGIN_USER","update","_","data","history","push","onError","err","graphQLErrors","extensions","exception","variables","loginUser","loading","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\nimport profile from './profile';\n\nconst IDContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {}\n});\n\nfunction Login(props) {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(\n      _,\n      {\n        data: { login: userData }\n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\n        <h1>Login</h1>\n        <Form.Input\n          label=\"Username\"\n          placeholder=\"Username..\"\n          name=\"username\"\n          type=\"text\"\n          value={values.username}\n          error={errors.username ? true : false}\n          onChange={onChange}\n        />\n        <Form.Input\n          label=\"Password\"\n          placeholder=\"Password..\"\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          error={errors.password ? true : false}\n          onChange={onChange}\n        />\n        <Button type=\"submit\" primary>\n          Login\n        </Button>\n      </Form>\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value) => (\n              <li key={value}>{value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}