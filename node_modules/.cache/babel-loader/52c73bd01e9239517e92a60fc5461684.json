{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/profile.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation login($username: String!, $password: String!) {\\n    login(username: $username, password: $password) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState, useRef } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport { Button, Card, Form, Grid, Image, Icon, Label, Menu, Segment } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\nimport LikeButton from '../components/LikeButton';\nimport DeleteButton from '../components/DeleteButton';\nimport MyPopup from '../util/MyPopup';\n\nfunction Profile(props) {\n  const _useState = useState({\n    activeItem: 'home'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1]; //const state = { activeItem: 'home' }\n\n\n  const handleItemClick = (e, {\n    name\n  }) => setState({\n    activeItem: name\n  });\n\n  const context = useContext(AuthContext);\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const _useForm = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  }),\n        onChange = _useForm.onChange,\n        onSubmit = _useForm.onSubmit,\n        values = _useForm.values;\n\n  const _useMutation = useMutation(LOGIN_USER, {\n    update(_, {\n      data: {\n        login: userData\n      }\n    }) {\n      context.login(userData);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        loginUser = _useMutation2[0],\n        loading = _useMutation2[1].loading;\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  const activeItem = state.activeItem;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    fluid: true,\n    vertical: true,\n    tabular: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    name: \"bio\",\n    active: activeItem === 'bio',\n    onClick: handleItemClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    name: \"pics\",\n    active: activeItem === 'pics',\n    onClick: handleItemClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    name: \"companies\",\n    active: activeItem === 'companies',\n    onClick: handleItemClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    name: \"links\",\n    active: activeItem === 'links',\n    onClick: handleItemClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    stretched: true,\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\",\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Daniel\"), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Joined in 2016\"), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Daniel is a comedian living in Nashville.\")), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), \"10 Friends\"))))))); //return{}\n}\n\nconst LOGIN_USER = gql(_templateObject());\nexport default Profile;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/profile.js"],"names":["React","useContext","useState","useRef","gql","useQuery","useMutation","moment","Button","Card","Form","Grid","Image","Icon","Label","Menu","Segment","AuthContext","useForm","LikeButton","DeleteButton","MyPopup","Profile","props","activeItem","state","setState","handleItemClick","e","name","context","errors","setErrors","loginUserCallback","username","password","onChange","onSubmit","values","LOGIN_USER","update","_","data","login","userData","history","push","onError","err","graphQLErrors","extensions","exception","variables","loginUser","loading"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,KAPF,EAQEC,IARF,EASEC,OATF,QAUO,mBAVP;AAYA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBAEIrB,QAAQ,CAAC;AAAEsB,IAAAA,UAAU,EAAE;AAAd,GAAD,CAFZ;AAAA;AAAA,QAEfC,KAFe;AAAA,QAERC,QAFQ,kBAItB;;;AAEA,QAAMC,eAAe,GAAG,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAiBH,QAAQ,CAAC;AAAEF,IAAAA,UAAU,EAAEK;AAAd,GAAD,CAAjD;;AAEA,QAAMC,OAAO,GAAG7B,UAAU,CAACgB,WAAD,CAA1B;;AARsB,qBASMf,QAAQ,CAAC,EAAD,CATd;AAAA;AAAA,QASf6B,MATe;AAAA,QASPC,SATO;;AAAA,mBAWiBd,OAAO,CAACe,iBAAD,EAAoB;AAChEC,IAAAA,QAAQ,EAAE,EADsD;AAEhEC,IAAAA,QAAQ,EAAE;AAFsD,GAApB,CAXxB;AAAA,QAWdC,QAXc,YAWdA,QAXc;AAAA,QAWJC,QAXI,YAWJA,QAXI;AAAA,QAWMC,MAXN,YAWMA,MAXN;;AAAA,uBAgBWhC,WAAW,CAACiC,UAAD,EAAa;AACvDC,IAAAA,MAAM,CACJC,CADI,EAEJ;AACEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAEC;AAAT;AADR,KAFI,EAKJ;AACAd,MAAAA,OAAO,CAACa,KAAR,CAAcC,QAAd;AACArB,MAAAA,KAAK,CAACsB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,KATsD;;AAUvDC,IAAAA,OAAO,CAACC,GAAD,EAAM;AACXhB,MAAAA,SAAS,CAACgB,GAAG,CAACC,aAAJ,CAAkB,CAAlB,EAAqBC,UAArB,CAAgCC,SAAhC,CAA0CpB,MAA3C,CAAT;AACD,KAZsD;;AAavDqB,IAAAA,SAAS,EAAEd;AAb4C,GAAb,CAhBtB;AAAA;AAAA,QAgBfe,SAhBe;AAAA,QAgBFC,OAhBE,oBAgBFA,OAhBE;;AAgCtB,WAASrB,iBAAT,GAA6B;AAC3BoB,IAAAA,SAAS;AACV;;AAlCqB,QAqCd7B,UArCc,GAqCCC,KArCD,CAqCdD,UArCc;AAuCtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,OAAO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,MAAM,EAAEA,UAAU,KAAK,KAFzB;AAGE,IAAA,OAAO,EAAEG,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAEH,UAAU,KAAK,MAFzB;AAGE,IAAA,OAAO,EAAEG,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,MAAM,EAAEH,UAAU,KAAK,WAFzB;AAGE,IAAA,OAAO,EAAEG,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAgBE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,MAAM,EAAEH,UAAU,KAAK,OAFzB;AAGE,IAAA,OAAO,EAAEG,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,CADF,EA0BE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,KAAK,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,8DAAX;AAA0E,IAAA,OAAO,MAAjF;AAAkF,IAAA,EAAE,EAAE,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAHF,CAFF,EASE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eADF,CATF,CADF,CADF,CA1BF,CADF,CADJ,CAvCsB,CAyFpB;AAGH;;AAED,MAAMY,UAAU,GAAGnC,GAAH,mBAAhB;AAYA,eAAekB,OAAf","sourcesContent":["import React, { useContext, useState, useRef } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n  Image,\n  Icon,\n  Label,\n  Menu, \n  Segment\n} from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../util/hooks';\nimport LikeButton from '../components/LikeButton';\nimport DeleteButton from '../components/DeleteButton';\nimport MyPopup from '../util/MyPopup';\n\nfunction Profile(props) {\n\n  const [state, setState] = useState({ activeItem: 'home' });\n\n  //const state = { activeItem: 'home' }\n\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\n\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(\n      _,\n      {\n        data: { login: userData }   \n      }\n    ) {\n      context.login(userData);\n      props.history.push('/');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n\n  const { activeItem } = state\n\n  return (\n      <div>\n        <Grid>\n          <Grid.Column width={4}>\n            <Menu fluid vertical tabular>\n              <Menu.Item\n                name='bio'\n                active={activeItem === 'bio'}\n                onClick={handleItemClick}\n              />\n              <Menu.Item\n                name='pics'\n                active={activeItem === 'pics'}\n                onClick={handleItemClick}\n              />\n              <Menu.Item\n                name='companies'\n                active={activeItem === 'companies'}\n                onClick={handleItemClick}\n              />\n              <Menu.Item\n                name='links'\n                active={activeItem === 'links'}\n                onClick={handleItemClick}\n              />\n            </Menu>\n          </Grid.Column>\n\n          <Grid.Column stretched width={12}>\n            <Segment>\n              <Card>\n                <Image src='https://react.semantic-ui.com/images/avatar/large/daniel.jpg' wrapped ui={false} />\n                <Card.Content>\n                  <Card.Header>Daniel</Card.Header>\n                  <Card.Meta>Joined in 2016</Card.Meta>\n                  <Card.Description>\n                    Daniel is a comedian living in Nashville.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <a>\n                    <Icon name='user' />\n                    10 Friends\n                  </a>\n                </Card.Content>\n              </Card>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n  );//return{}\n\n\n}\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}