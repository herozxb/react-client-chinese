{"ast":null,"code":"import _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition, Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\nfunction Home() {\n  const options = [{\n    key: '1',\n    text: '个人修养',\n    value: 'Self_improvement'\n  }, {\n    key: '2',\n    text: '人际关系',\n    value: 'Relationship'\n  }, {\n    key: '3',\n    text: '世界关系',\n    value: 'Wolrd'\n  }, {\n    key: '4',\n    text: '健康',\n    value: 'Health'\n  }, {\n    key: '5',\n    text: '成功',\n    value: 'Success'\n  }, {\n    key: '6',\n    text: '梦想',\n    value: 'Dream'\n  }, {\n    key: '7',\n    text: '改变世界',\n    value: 'Change_the_world'\n  }, {\n    key: '8',\n    text: '勇敢去做',\n    value: 'Brave_to_do'\n  }, {\n    key: '9',\n    text: 'Innovative Ideas',\n    value: 'Innovative Ideas'\n  }, {\n    key: '10',\n    text: '工作',\n    value: 'Job'\n  }, {\n    key: '11',\n    text: '开公司',\n    value: 'Company'\n  }, {\n    key: '12',\n    text: '干',\n    value: 'do'\n  }, {\n    key: '13',\n    text: '时间 Time',\n    value: 'Time'\n  }, {\n    key: '14',\n    text: '痛苦 Pain',\n    value: 'Pain'\n  }, {\n    key: '15',\n    text: '财富 Wealth',\n    value: 'Wealth'\n  }, {\n    key: '16',\n    text: '说话',\n    value: 'Speak'\n  }, {\n    key: '17',\n    text: '家庭',\n    value: 'Family'\n  }, {\n    key: '18',\n    text: '年轻',\n    value: 'Young'\n  }, {\n    key: '19',\n    text: '一念之差',\n    value: 'Danger_thought'\n  }, {\n    key: '20',\n    text: '借口',\n    value: 'Excuse'\n  }, {\n    key: '21',\n    text: '善与恶',\n    value: 'good_or_evil'\n  }, {\n    key: '22',\n    text: '对付坏人',\n    value: 'Enemy'\n  }, {\n    key: '23',\n    text: '正义 Justice',\n    value: 'Justice'\n  }, {\n    key: '24',\n    text: '纪念 Memory',\n    value: 'Memory'\n  }, {\n    key: '25',\n    text: '今天',\n    value: 'Today'\n  }, {\n    key: '26',\n    text: '计划 Plan',\n    value: 'Plan'\n  }, {\n    key: '27',\n    text: '科技革命',\n    value: 'Revolution'\n  }];\n\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user; //////////////////////////////////////////////////////////\n  //Thought Area\n\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        areaValues = _useState2[0],\n        setAreaValues = _useState2[1];\n\n  const on_change_for_thought_area = (e, {\n    value\n  }) => {\n    //console.log(value);\n    setAreaValues(value);\n  };\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n\n  let thoughtArea = \"Self_improvement\";\n  useEffect(() => {\n    console.log(\"====useEffect0.1======\");\n    thoughtArea = \"Relationship\";\n    console.log(thoughtArea);\n  });\n\n  const _useQuery = useQuery(FETCH_AREA_QUERY, {\n    variables: {\n      thoughtArea\n    }\n  }),\n        loading = _useQuery.loading,\n        posts = _useQuery.data.getAreaPosts;\n\n  return React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"search\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    options: options,\n    placeholder: \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\",\n    search: true,\n    fluid: true,\n    selection: true,\n    allowAdditions: true,\n    scrolling: true,\n    value: areaValues,\n    onAddItem: null,\n    onChange: on_change_for_thought_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, user && React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    area: areaValues,\n    onNameChange: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(Transition.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\u6700\\u65B0\"))), posts && posts.map(post => React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(PostCard, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js"],"names":["React","useContext","useState","useEffect","useQuery","Grid","Transition","Dropdown","Divider","Header","Icon","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","FETCH_AREA_QUERY","Home","options","key","text","value","user","areaValues","setAreaValues","on_change_for_thought_area","e","thoughtArea","console","log","variables","loading","posts","data","getAreaPosts","setName","map","post","id","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect} from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition,Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\n\nfunction Home() {\n\nconst options = [\n  { key: '1', text: '个人修养', value: 'Self_improvement' },\n  { key: '2', text: '人际关系', value: 'Relationship' },\n  { key: '3', text: '世界关系', value: 'Wolrd' },\n  { key: '4', text: '健康', value: 'Health' },\n  { key: '5', text: '成功', value: 'Success' },\n  { key: '6', text: '梦想', value: 'Dream' },\n  { key: '7', text: '改变世界', value: 'Change_the_world' },\n  { key: '8', text: '勇敢去做', value: 'Brave_to_do' },\n  { key: '9', text: 'Innovative Ideas', value: 'Innovative Ideas' },\n  { key: '10', text: '工作', value: 'Job' },\n  { key: '11', text: '开公司', value: 'Company' },\n  { key: '12', text: '干', value: 'do' },\n  { key: '13', text: '时间 Time', value: 'Time' },\n  { key: '14', text: '痛苦 Pain', value: 'Pain' },\n  { key: '15', text: '财富 Wealth', value: 'Wealth' },\n  { key: '16', text: '说话', value: 'Speak' },\n  { key: '17', text: '家庭', value: 'Family' },\n  { key: '18', text: '年轻', value: 'Young' },\n  { key: '19', text: '一念之差', value: 'Danger_thought' },\n  { key: '20', text: '借口', value: 'Excuse' },\n  { key: '21', text: '善与恶', value: 'good_or_evil' },\n  { key: '22', text: '对付坏人', value: 'Enemy' },\n  { key: '23', text: '正义 Justice', value: 'Justice' },\n  { key: '24', text: '纪念 Memory', value: 'Memory' },\n  { key: '25', text: '今天', value: 'Today' },\n  { key: '26', text: '计划 Plan', value: 'Plan' },\n  { key: '27', text: '科技革命', value: 'Revolution' },\n]\n\n\n\n  const { user } = useContext(AuthContext);\n\n  //////////////////////////////////////////////////////////\n  //Thought Area\n  const [areaValues,setAreaValues] = useState([]);\n  const on_change_for_thought_area = (e, { value }) => \n  {\n    //console.log(value);\n    setAreaValues(value)\n  };\n\n  /*\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n  //*/\n\n  let thoughtArea = \"Self_improvement\";\n\n  useEffect(() => {\n      console.log(\"====useEffect0.1======\");\n      thoughtArea = \"Relationship\"\n      console.log(thoughtArea);\n  });\n\n\n\n\n\n  const {\n    loading,\n    data: { getAreaPosts: posts } \n  } = useQuery(FETCH_AREA_QUERY,\n    {\n      variables: {\n        thoughtArea\n    },\n  }\n  );\n\n  return (\n    <Grid columns={1}>\n        <Grid.Row>\n          <Grid.Column>\n            <Divider horizontal>\n              <Header as='h3'>\n                <Icon name='search' color=\"blue\"/>\n                  搜索 思想 领域\n              </Header>\n            </Divider>\n          </Grid.Column>\n        <Grid.Column>\n          <Dropdown\n            options={options}\n            placeholder='搜索 思想 领域'\n            search\n            fluid\n            selection\n            allowAdditions\n            scrolling\n            value={areaValues}\n            onAddItem={null}\n            onChange={on_change_for_thought_area}\n          />\n          </Grid.Column>\n        </Grid.Row>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n            <PostForm area={areaValues} onNameChange={setName} />\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>loading...</h1>\n        ) : (\n          <Transition.Group>\n            <Grid.Column>\n              <Divider horizontal><h3>最新</h3></Divider>\n            </Grid.Column>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}