{"ast":null,"code":"var _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js\";\nimport React, { useContext, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition, Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nconst options = [{\n  key: 'English',\n  text: 'English',\n  value: 'English'\n}, {\n  key: 'French',\n  text: 'French',\n  value: 'French'\n}, {\n  key: 'Spanish',\n  text: 'Spanish',\n  value: 'Spanish'\n}, {\n  key: 'German',\n  text: 'German',\n  value: 'German'\n}, {\n  key: 'Chinese',\n  text: 'Chinese',\n  value: 'Chinese'\n}];\n\nfunction Home() {\n  const _useContext = useContext(AuthContext),\n        user = _useContext.user;\n\n  const _useQuery = useQuery(FETCH_POSTS_QUERY),\n        loading = _useQuery.loading,\n        posts = _useQuery.data.getPosts;\n\n  const _useState = useState(\"\"),\n        state = _useState.state,\n        setState = _useState.setState;\n\n  const _useState2 = useState(\"\"),\n        currentValues = _useState2.currentValues,\n        setCurrentValues = _useState2.setCurrentValues;\n\n  const handleAddition = (e, {\n    value\n  }) => {\n    setState(prevState => ({\n      options: [{\n        text: value,\n        value\n      }, ...prevState.options]\n    }));\n  };\n\n  const handleChange = (e, {\n    value\n  }) => setState({\n    currentValues: value\n  }); //()=> setCurrentValues(state);\n\n\n  return React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    options: null,\n    placeholder: \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\",\n    search: true,\n    fluid: true,\n    selection: true,\n    multiple: true,\n    allowAdditions: true,\n    value: null,\n    onAddItem: null,\n    onChange: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"tag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), \"\\u53D1\\u8868\\u4F60\\u7684\\u601D\\u60F3\")), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, user && React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(Transition.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, posts && posts.map(post => React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(PostCard, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/pages/Home.js"],"names":["React","useContext","useState","useQuery","Grid","Transition","Dropdown","Divider","Header","Icon","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","options","key","text","value","Home","user","loading","posts","data","getPosts","state","setState","currentValues","setCurrentValues","handleAddition","e","prevState","handleChange","map","post","id","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext,useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition,Dropdown, Divider, Header, Icon } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\n\nconst options = [\n  { key: 'English', text: 'English', value: 'English' },\n  { key: 'French', text: 'French', value: 'French' },\n  { key: 'Spanish', text: 'Spanish', value: 'Spanish' },\n  { key: 'German', text: 'German', value: 'German' },\n  { key: 'Chinese', text: 'Chinese', value: 'Chinese' },\n]\n\nfunction Home() {\n  const { user } = useContext(AuthContext);\n  const {\n    loading,\n    data: { getPosts: posts } \n  } = useQuery(FETCH_POSTS_QUERY);\n\n  const {state,setState} = useState(\"\");\n  const {currentValues,setCurrentValues} = useState(\"\");\n\n  const handleAddition = (e, { value }) => {\n    setState((prevState) => ({\n      options: [{ text: value, value }, ...prevState.options],\n    }))\n  };\n\n  const handleChange = (e, { value }) => setState({ currentValues: value });\n  //()=> setCurrentValues(state);\n\n  return (\n    <Grid columns={1}>\n      <Grid.Row>\n      <Divider />\n      <Grid.Column>\n        <Dropdown\n          options={null}\n          placeholder='搜索 思想 领域'\n          search\n          fluid\n          selection\n          multiple\n          allowAdditions\n          value={null}\n          onAddItem={null}\n          onChange={null}\n        />\n        </Grid.Column>\n      </Grid.Row>\n      <Divider horizontal>\n        <Header as='h4'>\n          <Icon name='tag' />\n            发表你的思想\n        </Header>\n      </Divider>\n      <Grid.Row>\n        {user && (\n          <Grid.Column>\n            <PostForm />\n          </Grid.Column>\n        )}\n        {loading ? (\n          <h1>loading...</h1>\n        ) : (\n          <Transition.Group>\n            {posts &&\n              posts.map((post) => (\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              ))}\n          </Transition.Group>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}