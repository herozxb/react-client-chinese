{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/empzxb/Documents/webApp/app/react-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/empzxb/Documents/webApp/app/react-client/src/components/PostForm.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createAreaPost($body: String!,$thoughtArea: String!) {\\n    createAreaPost(body: $body, thoughtArea: $thoughtArea) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likes {\\n        id\\n        username\\n        createdAt\\n      }\\n      likeCount\\n      comments {\\n        id\\n        body\\n        username\\n        createdAt\\n      }\\n      commentCount\\n      thoughtArea\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createPost($body: String!) {\\n    createPost(body: $body) {\\n      id\\n      body\\n      createdAt\\n      username\\n      likes {\\n        id\\n        username\\n        createdAt\\n      }\\n      likeCount\\n      comments {\\n        id\\n        body\\n        username\\n        createdAt\\n      }\\n      commentCount\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Divider, Header, Icon, Grid, Dropdown } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from '../util/hooks';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\nfunction PostForm() {\n  const options = [{\n    key: '1',\n    text: '个人修养',\n    value: 'Self_improvement'\n  }, {\n    key: '2',\n    text: '人际关系',\n    value: 'Relationship'\n  }, {\n    key: '3',\n    text: '世界关系',\n    value: 'Wolrd'\n  }, {\n    key: '4',\n    text: '健康',\n    value: 'Health'\n  }, {\n    key: '5',\n    text: '成功',\n    value: 'Success'\n  }, {\n    key: '6',\n    text: '梦想',\n    value: 'Dream'\n  }, {\n    key: '7',\n    text: '改变世界',\n    value: 'Change_the_world'\n  }, {\n    key: '8',\n    text: '勇敢去做',\n    value: 'Brave_to_do'\n  }, {\n    key: '9',\n    text: 'Innovative Ideas',\n    value: 'Innovative Ideas'\n  }, {\n    key: '10',\n    text: '工作',\n    value: 'Job'\n  }, {\n    key: '11',\n    text: '开公司',\n    value: 'Company'\n  }, {\n    key: '12',\n    text: '干',\n    value: 'do'\n  }, {\n    key: '13',\n    text: '时间 Time',\n    value: 'Time'\n  }, {\n    key: '14',\n    text: '痛苦 Pain',\n    value: 'Pain'\n  }, {\n    key: '15',\n    text: '财富 Wealth',\n    value: 'Wealth'\n  }, {\n    key: '16',\n    text: '说话',\n    value: 'Speak'\n  }, {\n    key: '17',\n    text: '家庭',\n    value: 'Family'\n  }, {\n    key: '18',\n    text: '年轻',\n    value: 'Young'\n  }, {\n    key: '19',\n    text: '一念之差',\n    value: 'Danger_thought'\n  }, {\n    key: '20',\n    text: '借口',\n    value: 'Excuse'\n  }, {\n    key: '21',\n    text: '善与恶',\n    value: 'good_or_evil'\n  }, {\n    key: '22',\n    text: '对付坏人',\n    value: 'Enemy'\n  }, {\n    key: '23',\n    text: '正义 Justice',\n    value: 'Justice'\n  }, {\n    key: '24',\n    text: '纪念 Memory',\n    value: 'Memory'\n  }, {\n    key: '25',\n    text: '今天',\n    value: 'Today'\n  }, {\n    key: '26',\n    text: '计划 Plan',\n    value: 'Plan'\n  }, {\n    key: '27',\n    text: '科技革命',\n    value: 'Revolution'\n  }]; //const { values, onChange, onSubmit } = useForm(createPostCallback, {\n  //  body: ''\n  //});\n  //const [values, setValues] = useState('');\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        texts = _useState2[0],\n        setTexts = _useState2[1];\n\n  const _useState3 = useState('default'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        thoughtArea = _useState4[0],\n        setThoughtArea = _useState4[1]; //const [state,setState] = useState({options});\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentValues = _useState6[0],\n        setCurrentValues = _useState6[1];\n\n  const on_change_for_text = event => {\n    //setValues({ ...values, [event.target.name]: event.target.value });\n    setTexts(_objectSpread({}, texts, {\n      [event.target.name]: event.target.value\n    }));\n    console.log(\"=========for_input_text========\"); //console.log(event.target.name);\n    //console.log(event.target.value);\n    //console.log({ ...texts, [event.target.name]: event.target.value });\n    //console.log(texts);\n\n    setThoughtArea(_objectSpread({}, thoughtArea, {\n      [\"thoughtArea\"]: currentValues\n    }));\n    console.log(_objectSpread({}, thoughtArea, {\n      [\"thoughtArea\"]: currentValues\n    }));\n  };\n\n  const on_change_for_thought_area = (e, {\n    value\n  }) => {\n    //console.log(value);\n    setCurrentValues(value);\n  }; //  const onSubmit = (event) => {\n  //    event.preventDefault();\n  //console.log(\"=========1.0========\");\n  //    createPost();\n  //createPost3({\n  //  variables: {thoughtArea3},\n  //});\n  //  };\n\n  /*\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\n      values.body = '';\n    }\n  });\n  //*/\n  //  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION);\n\n\n  const _useMutation = useMutation(CREATE_AREA_POST_MUTATION, {\n    variables: {\n      body: texts.body,\n      thoughtArea: thoughtArea.thoughtArea\n    },\n\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_AREA_QUERY,\n        variables: {\n          thoughtArea: thoughtArea.thoughtArea\n        }\n      }); //console.log(\"=========1========\");\n      //console.log(data);\n\n      data.getAreaPosts = [result.data.createAreaPost, ...data.getAreaPosts]; //console.log(\"=========2========\");\n      //console.log(data);\n\n      proxy.writeQuery({\n        query: FETCH_AREA_QUERY,\n        variables: {\n          thoughtArea: thoughtArea.thoughtArea\n        },\n        data\n      });\n      texts.body = '';\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        createAreaPost = _useMutation2[0],\n        error = _useMutation2[1].error;\n\n  const submit = event => {\n    event.preventDefault(); //console.log(\"=========1.0.0========\");\n    //console.log(texts,thoughtArea);\n    //createPost3({\n    //  variables: {thoughtArea3},\n    //});\n    //addTodo({ variables: { type: input.value } });\n    //updateTodo({ variables: { id, type: input.value } });\n    //createAreaPost({ variables: { body: texts.body, thoughtArea: thoughtArea.thoughtArea } });\n\n    createAreaPost();\n  }; //  function createPostCallback() {\n  //console.log(\"=========1.0.1.1========\");\n  //    createPost();\n  //createPost3({\n  //  variables: {thoughtArea3},\n  //});\n  //  }\n  // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {\n    console.log(\"====useEffect1.0======\");\n    console.log(currentValues);\n    window.myVar = currentValues;\n    console.log(\"====useEffect1.1======\");\n    console.log(window.myVar);\n  }); //const handleAddition = (e, { value }) => {\n  //  console.log(\"=========1.0==========\");   \n  //  console.log(value);\n  //setState((prevState) => ({\n  //  options: [{ text: value, value }, ...prevState.options],\n  //}))\n  //}\n\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"search\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    options: options,\n    placeholder: \"\\u641C\\u7D22 \\u601D\\u60F3 \\u9886\\u57DF\",\n    search: true,\n    fluid: true,\n    selection: true,\n    allowAdditions: true,\n    scrolling: true,\n    value: currentValues,\n    onAddItem: null,\n    onChange: on_change_for_thought_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })))), React.createElement(Form, {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"comments\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), \"\\u53D1\\u8868 \\u4F60\\u7684 \\u601D\\u60F3\")), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    placeholder: \"\\u4E16\\u754C \\u4F60\\u597D!\",\n    name: \"body\",\n    onChange: on_change_for_text,\n    value: texts.body,\n    error: error ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"\\u53D1\\u5E03\"))), error && React.createElement(\"div\", {\n    className: \"ui error message\",\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, error.graphQLErrors[0].message))));\n}\n\nconst CREATE_POST_MUTATION = gql(_templateObject());\nconst CREATE_AREA_POST_MUTATION = gql(_templateObject2());\nexport default PostForm;","map":{"version":3,"sources":["/Users/empzxb/Documents/webApp/app/react-client/src/components/PostForm.js"],"names":["React","useState","useEffect","Button","Form","Divider","Header","Icon","Grid","Dropdown","gql","useMutation","useForm","FETCH_POSTS_QUERY","FETCH_AREA_QUERY","PostForm","options","key","text","value","texts","setTexts","thoughtArea","setThoughtArea","currentValues","setCurrentValues","on_change_for_text","event","target","name","console","log","on_change_for_thought_area","e","CREATE_AREA_POST_MUTATION","variables","body","update","proxy","result","data","readQuery","query","getAreaPosts","createAreaPost","writeQuery","error","submit","preventDefault","window","myVar","marginBottom","graphQLErrors","message","CREATE_POST_MUTATION"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { Button, Form, Divider, Header, Icon, Grid, Dropdown } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { useForm } from '../util/hooks';\nimport { FETCH_POSTS_QUERY, FETCH_AREA_QUERY } from '../util/graphql';\n\n\nfunction PostForm() {\n\n\nconst options = [\n  { key: '1', text: '个人修养', value: 'Self_improvement' },\n  { key: '2', text: '人际关系', value: 'Relationship' },\n  { key: '3', text: '世界关系', value: 'Wolrd' },\n  { key: '4', text: '健康', value: 'Health' },\n  { key: '5', text: '成功', value: 'Success' },\n  { key: '6', text: '梦想', value: 'Dream' },\n  { key: '7', text: '改变世界', value: 'Change_the_world' },\n  { key: '8', text: '勇敢去做', value: 'Brave_to_do' },\n  { key: '9', text: 'Innovative Ideas', value: 'Innovative Ideas' },\n  { key: '10', text: '工作', value: 'Job' },\n  { key: '11', text: '开公司', value: 'Company' },\n  { key: '12', text: '干', value: 'do' },\n  { key: '13', text: '时间 Time', value: 'Time' },\n  { key: '14', text: '痛苦 Pain', value: 'Pain' },\n  { key: '15', text: '财富 Wealth', value: 'Wealth' },\n  { key: '16', text: '说话', value: 'Speak' },\n  { key: '17', text: '家庭', value: 'Family' },\n  { key: '18', text: '年轻', value: 'Young' },\n  { key: '19', text: '一念之差', value: 'Danger_thought' },\n  { key: '20', text: '借口', value: 'Excuse' },\n  { key: '21', text: '善与恶', value: 'good_or_evil' },\n  { key: '22', text: '对付坏人', value: 'Enemy' },\n  { key: '23', text: '正义 Justice', value: 'Justice' },\n  { key: '24', text: '纪念 Memory', value: 'Memory' },\n  { key: '25', text: '今天', value: 'Today' },\n  { key: '26', text: '计划 Plan', value: 'Plan' },\n  { key: '27', text: '科技革命', value: 'Revolution' },\n]\n\n\n  \n  //const { values, onChange, onSubmit } = useForm(createPostCallback, {\n  //  body: ''\n  //});\n\n  //const [values, setValues] = useState('');\n  const [texts, setTexts] = useState('');\n  const [thoughtArea, setThoughtArea] = useState('default');\n  //const [state,setState] = useState({options});\n  const [currentValues,setCurrentValues] = useState([]);\n\n  const on_change_for_text = (event) => {\n    //setValues({ ...values, [event.target.name]: event.target.value });\n    setTexts({ ...texts, [event.target.name]: event.target.value });\n    console.log(\"=========for_input_text========\");\n    //console.log(event.target.name);\n    //console.log(event.target.value);\n    //console.log({ ...texts, [event.target.name]: event.target.value });\n    //console.log(texts);\n\n    setThoughtArea({ ...thoughtArea, [\"thoughtArea\"]: currentValues });\n    console.log({ ...thoughtArea, [\"thoughtArea\"]: currentValues });\n  };\n\n  const on_change_for_thought_area = (e, { value }) => \n  {\n    //console.log(value);\n    setCurrentValues(value)\n  };\n\n//  const onSubmit = (event) => {\n//    event.preventDefault();\n    //console.log(\"=========1.0========\");\n//    createPost();\n    //createPost3({\n    //  variables: {thoughtArea3},\n    //});\n//  };\n\n  /*\n  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\n      values.body = '';\n    }\n  });\n//*/\n\n//  const [createPost, { error }] = useMutation(CREATE_POST_MUTATION);\n\n\n  const [createAreaPost, { error }] = useMutation(CREATE_AREA_POST_MUTATION,{\n    variables: { body: texts.body, thoughtArea: thoughtArea.thoughtArea },\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_AREA_QUERY,\n        variables:{ thoughtArea : thoughtArea.thoughtArea}\n      });\n      //console.log(\"=========1========\");\n      //console.log(data);\n      data.getAreaPosts = [result.data.createAreaPost, ...data.getAreaPosts];\n      //console.log(\"=========2========\");\n      //console.log(data);\n      proxy.writeQuery({ \n        query: FETCH_AREA_QUERY, \n        variables:{ thoughtArea : thoughtArea.thoughtArea}, \n        data \n      });\n      texts.body = '';\n    }\n  });\n\n  const submit = (event) => {\n\n    event.preventDefault();\n    //console.log(\"=========1.0.0========\");\n    //console.log(texts,thoughtArea);\n    //createPost3({\n    //  variables: {thoughtArea3},\n    //});\n    //addTodo({ variables: { type: input.value } });\n    //updateTodo({ variables: { id, type: input.value } });\n    //createAreaPost({ variables: { body: texts.body, thoughtArea: thoughtArea.thoughtArea } });\n    createAreaPost();\n\n  };\n\n//  function createPostCallback() {\n    //console.log(\"=========1.0.1.1========\");\n//    createPost();\n    //createPost3({\n    //  variables: {thoughtArea3},\n    //});\n//  }\n\n\n\n    // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n      console.log(\"====useEffect1.0======\");\n      console.log(currentValues);\n      window.myVar = currentValues\n      console.log(\"====useEffect1.1======\");\n      console.log(window.myVar);\n  });\n\n\n  //const handleAddition = (e, { value }) => {\n\n  //  console.log(\"=========1.0==========\");   \n  //  console.log(value);\n    //setState((prevState) => ({\n    //  options: [{ text: value, value }, ...prevState.options],\n    //}))\n  //}\n\n\n  return (\n    <>\n    <Grid columns={1}>\n      <Grid.Row>\n        <Grid.Column>\n          <Divider horizontal>\n            <Header as='h3'>\n              <Icon name='search' color=\"blue\"/>\n                搜索 思想 领域\n            </Header>\n          </Divider>\n        </Grid.Column>\n      <Grid.Column>\n        <Dropdown\n          options={options}\n          placeholder='搜索 思想 领域'\n          search\n          fluid\n          selection\n          allowAdditions\n          scrolling\n          value={currentValues}\n          onAddItem={null}\n          onChange={on_change_for_thought_area}\n        />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n      <Form onSubmit={submit}>\n          <Divider horizontal>\n            <Header as='h3'>\n              <Icon name='comments' color=\"blue\"/>\n                发表 你的 思想\n            </Header>\n          </Divider>\n        <Form.Field>\n          <Form.Input\n            placeholder=\"世界 你好!\"\n            name=\"body\"\n            onChange={on_change_for_text}\n            value={texts.body}\n            error={error ? true : false}\n          />\n          <Button type=\"submit\" color=\"blue\">\n            发布\n          </Button>\n        </Form.Field>\n      </Form>\n      {error && (\n        <div className=\"ui error message\" style={{ marginBottom: 20 }}>\n          <ul className=\"list\">\n            <li>{error.graphQLErrors[0].message}</li>\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n\nconst CREATE_POST_MUTATION = gql`\n  mutation createPost($body: String!) {\n    createPost(body: $body) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\nconst CREATE_AREA_POST_MUTATION = gql`\n  mutation createAreaPost($body: String!,$thoughtArea: String!) {\n    createAreaPost(body: $body, thoughtArea: $thoughtArea) {\n      id\n      body\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n      thoughtArea\n    }\n  }\n`;\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}